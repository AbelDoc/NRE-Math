<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: /mnt/c/Users/abell/Documents/GitHub/NRE-Math/src/Math/Vector/4D/NRE_Vector4D.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
      <li><a href="globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_3813464283bee2267f39dcf080a84d74.php">Math</a></li><li class="navelem"><a class="el" href="dir_4005e686f12f80d4c04432a698da12f8.php">Vector</a></li><li class="navelem"><a class="el" href="dir_c8b263e94eb4e39a69f68b819ffff193.php">4D</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_Vector4D.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_r_e___vector4_d_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">     #pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">    #include &lt;type_traits&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">    #include &lt;ostream&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">    #include &lt;Utility/String/NRE_String.hpp&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">    #include &lt;Utility/Interfaces/Stringable/NRE_Stringable.hpp&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">    #include &quot;../../NRE_Math.hpp&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">namespace </span><a class="code" href="namespace_math.php">Math</a> {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector2D;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector3D;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keyword">class </span>Vector4D : <span class="keyword">public</span> Utility::Stringable&lt;Vector4D&lt;T&gt;&gt; {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                static_assert(ArithmeticCheckerV&lt;T&gt;); </div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keyword">private</span> :   <span class="comment">//Fields</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    T x = 0;    </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    T y = 0;    </div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    T z = 0;    </div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    T w = 0;    </div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keyword">public</span>:    <span class="comment">// Methods</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    <span class="comment">//## Constructor ##//</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment"></span>                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N, <span class="keyword">class</span> M, <span class="keyword">typename</span> = UseIfArithmetic&lt;K, L, N, M&gt;&gt;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0692b241cf89b9f098f3fec7f8d54412">   61</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0692b241cf89b9f098f3fec7f8d54412">Vector4D</a>(K nX, L nY, N nZ, M nW) : x(static_cast &lt;T&gt; (nX)), y(static_cast &lt;T&gt; (nY)), z(static_cast &lt;T&gt; (nZ)), w(static_cast &lt;T&gt; (nW)) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6436b48d7982759f41e9a86e5d6a1f81">   68</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6436b48d7982759f41e9a86e5d6a1f81">Vector4D</a>(K <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa35ea878fbbd5886e4227134c8eab16d">value</a>) : Vector4D(value, value, value, value) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(std::initializer_list&lt;T&gt; list);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    <span class="comment">//## Copy-Constructor ##//</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment"></span>                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(Vector4D <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <span class="comment">//## Move-Constructor ##//</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span>                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(Vector4D &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="comment">//## Convertor ##//</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N, <span class="keyword">typename</span> = UseIfArithmetic&lt;L, N&gt;&gt;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa14bcf5ffc9e9cc75673902ca2c8f8bb">  110</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa14bcf5ffc9e9cc75673902ca2c8f8bb">Vector4D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u, L nZ, N nW) : Vector4D(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af9a91fc8105a8ca449270747273f5b79">getX</a>(), u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1d735d9c7ddbe26a0f12625a17acfde">getY</a>(), nZ, nW) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">Vector4D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">typename</span> = UseIfArithmetic&lt;L&gt;&gt;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa81792f97d5ddfeb1093acd4b42489f4">  124</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa81792f97d5ddfeb1093acd4b42489f4">Vector4D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u, L nW) : Vector4D(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af9a91fc8105a8ca449270747273f5b79">getX</a>(), u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1d735d9c7ddbe26a0f12625a17acfde">getY</a>(), u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6d05d7242e635d6d30f65349a64653a0">getZ</a>(), nW) {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    <span class="comment">//## Deconstructor ##//</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a138534e23136a793614966f44d132ee8">~Vector4D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    <span class="comment">//## Getter ##//</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span>                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af9a91fc8105a8ca449270747273f5b79">getX</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1d735d9c7ddbe26a0f12625a17acfde">getY</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6d05d7242e635d6d30f65349a64653a0">getZ</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a99cc1364656712439886f1cb732ef352">getW</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af3fb5cc4b82563473058af94ed3b18dc">getR</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a77a1ec531d6fe24d65640a316078f1b0">getG</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a53dae7f469a135fb0fb1776e86fa4651">getB</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8d3a67b94eb0691b684e94790420bff2">getA</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    <span class="comment">//## Setter ##//</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">  173</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(K nX) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                            x = static_cast &lt;T&gt; (nX);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                        }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">  181</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(K nY) {</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                            y = static_cast &lt;T&gt; (nY);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        }</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">  189</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(K nZ) {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                            z = static_cast &lt;T&gt; (nZ);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">  197</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(K nW) {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                            w = static_cast &lt;T&gt; (nW);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a45d2afcd9c75e1806bc246281b44b0fd">  205</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a45d2afcd9c75e1806bc246281b44b0fd">setR</a>(K r) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(r);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        }</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a15b2d9117d59f4629811024f1aa4edc9">  213</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a15b2d9117d59f4629811024f1aa4edc9">setG</a>(K g) {</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(g);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a76ec4eab396b5ee7d4a4dbe44cc9b0cc">  221</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a76ec4eab396b5ee7d4a4dbe44cc9b0cc">setB</a>(K b) {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(b);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8fa14964830b9692edcda6e8f90e0173">  229</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8fa14964830b9692edcda6e8f90e0173">setA</a>(K a) {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(a);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N, <span class="keyword">class</span> M, <span class="keyword">typename</span> = UseIfArithmetic&lt;K, L, N, M&gt;&gt;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adca379685f7e5c5dca8896ed4297b8ea">  240</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adca379685f7e5c5dca8896ed4297b8ea">setCoord</a>(K nX, L nY, N nZ, M nW) {</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(nX);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(nY);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(nZ);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(nW);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N, <span class="keyword">typename</span> = UseIfArithmetic&lt;L, N&gt;&gt;</div><div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a14c33fbf778d1fa2d84ea15a18e887dc">  253</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a14c33fbf778d1fa2d84ea15a18e887dc">setCoord</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u, L nZ, N nW) {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a3a2394b397491fcd9493a1108f30109c">getX</a>());</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#acab4df35acef9a21408882db7b0dea7a">getY</a>());</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(nZ);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(nW);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                        }</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">typename</span> = UseIfArithmetic&lt;L&gt;&gt;</div><div class="line"><a name="l00265"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa574b0887d5921a08322d18e583ebe7d">  265</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa574b0887d5921a08322d18e583ebe7d">setCoord</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u, L nW) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a6f38989cfecc5987fdda4126ecdc17e2">getX</a>());</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aff90194d75579e485e2dd4d66106f506">getY</a>());</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0fe3d36bfc1fc6a84d5d1d54d94ba291">getZ</a>());</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(nW);</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N, <span class="keyword">class</span> M, <span class="keyword">typename</span> = UseIfArithmetic&lt;K, L, N, M&gt;&gt;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a4264bad37a4155e13fed47b52fd0f432">  279</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a4264bad37a4155e13fed47b52fd0f432">setRGBA</a>(K r, L g, N b, M a) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(r);</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(g);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(b);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(a);</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                        }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">typename</span> = UseIfArithmetic&lt;L&gt;&gt;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6b0315651d50d0ef35551109e9a31e84">  291</a></span>&#160;                        constexpr <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6b0315651d50d0ef35551109e9a31e84">setRGBA</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u, L a) {</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a6f38989cfecc5987fdda4126ecdc17e2">getX</a>());</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aff90194d75579e485e2dd4d66106f506">getY</a>());</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(u.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0fe3d36bfc1fc6a84d5d1d54d94ba291">getZ</a>());</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(a);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                        }</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    <span class="comment">//## Methods ##//</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span>                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad8e468265fac70de4534f0aa861f7788">norm</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                        constexpr T <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1a2d2b014d7f9aedc14bb777847bd973">normSquared</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a764c246bdc43173498afa08679a19b54">distance</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                        constexpr std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a55660d650c7a16d7a00bd9e84494ffe5">distanceSquared</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adbe956f15f3b7ed2bbb873ef01c23c96">normalize</a>();</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acd1ddc911ce3fc2f1a1b5795899d176e">  327</a></span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acd1ddc911ce3fc2f1a1b5795899d176e">limit</a>(K max) {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                            <span class="keyword">auto</span> n = <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad8e468265fac70de4534f0aa861f7788">norm</a>();</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                            <span class="keywordflow">if</span> (n &gt; max) {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adbe956f15f3b7ed2bbb873ef01c23c96">normalize</a>();</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                            }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                        }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">  339</a></span>&#160;                        Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">pow</a>(K p) {</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(std::pow(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (x), static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (p)));</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(std::pow(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (y), static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (p)));</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(std::pow(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (z), static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (p)));</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(std::pow(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (w), static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (p)));</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                        }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                        Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">pow</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        constexpr <span class="keyword">const</span> T* <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa35ea878fbbd5886e4227134c8eab16d">value</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                    <span class="comment">//## Access Operator ##//</span></div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment"></span>                        constexpr T&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aee8da21f7a5959da0724b2079b817f3c">operator []</a>(std::size_t index);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                        constexpr T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aee8da21f7a5959da0724b2079b817f3c">operator []</a>(std::size_t index) <span class="keyword">const</span>;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    <span class="comment">//## Assignment Operator ##//</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"></span>                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a09137afe7c123f664f2669037fe12bef">operator =</a>(Vector4D <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a09137afe7c123f664f2669037fe12bef">operator =</a>(Vector4D &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a09137afe7c123f664f2669037fe12bef">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a09137afe7c123f664f2669037fe12bef">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> &amp;&amp; u);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                    <span class="comment">//## Shortcut Operator ##//</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0f6bf949e031fc140aa378573b80b43c">  409</a></span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0f6bf949e031fc140aa378573b80b43c">operator +=</a>(K k) {</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (x) + static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (y) + static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (z) + static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (w) + static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                        }</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0f6bf949e031fc140aa378573b80b43c">operator +=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acf56542d31864002de9b80a04c876696">  429</a></span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acf56542d31864002de9b80a04c876696">operator -=</a>(K k) {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (x) - static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (y) - static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (z) - static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (w) - static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        }</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acf56542d31864002de9b80a04c876696">operator -=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af13a90662b7c8c4370c0cf294c8153e5">  449</a></span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af13a90662b7c8c4370c0cf294c8153e5">operator *=</a>(K k) {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (x) * static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (y) * static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (z) * static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (w) * static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                        }</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af13a90662b7c8c4370c0cf294c8153e5">operator *=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00469"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac9239605c0fdb6aef3f672f7555856ba">  469</a></span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac9239605c0fdb6aef3f672f7555856ba">operator /=</a>(K k) {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">setX</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (x) / static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">setY</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (y) / static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">setZ</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (z) / static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">setW</a>(static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (w) / static_cast &lt;std::common_type_t&lt;T, K&gt;&gt; (k));</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                            <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                        }</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac9239605c0fdb6aef3f672f7555856ba">operator /=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                        constexpr std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a80f7a66bf918e4e1599e8682cb8760d1">operator |=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                        constexpr Vector4D&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a300e8ccce59459b1932ad4ee9db1e887">operator ^=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                    <span class="comment">//## Arithmetic Operator ##//</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00505"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa20df401529319ee2ba562baebc7983e">  505</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa20df401529319ee2ba562baebc7983e">operator +</a>(K k)<span class="keyword"> const </span>{</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt;(*this) += k;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                        }</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa20df401529319ee2ba562baebc7983e">operator +</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad44bacd243bfe93deb1e558249d9e410">  521</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1dd7f5e34a5deac0bf9db09f248c8730">operator -</a>(K k)<span class="keyword"> const </span>{</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt;(*this) -= k;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                        }</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1dd7f5e34a5deac0bf9db09f248c8730">operator -</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                        constexpr Vector4D <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1dd7f5e34a5deac0bf9db09f248c8730">operator -</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00542"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18e63883cfb1f108eb03934517919639">  542</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18e63883cfb1f108eb03934517919639">operator *</a>(K k)<span class="keyword"> const </span>{</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt;(*this) *= k;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                        }</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18e63883cfb1f108eb03934517919639">operator *</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18a65029d6819f46fe0e0d32445a031d">  558</a></span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18a65029d6819f46fe0e0d32445a031d">operator /</a>(K k)<span class="keyword"> const </span>{</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt;(*this) /= k;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                        }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                        constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18a65029d6819f46fe0e0d32445a031d">operator /</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                        constexpr std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6ef39837a99282f34b7b725270488c1d">operator |</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                        constexpr  <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad2ffda4c85fc211222485391e23032f9">operator ^</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                    <span class="comment">//## Comparison Operator ##//</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                        constexpr <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aaece7843e13022cdc619f660787bb780">operator ==</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                        constexpr <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1baf0caf0482389c63389c4dd9e6095">operator !=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                        constexpr <span class="keywordtype">bool</span> operator &lt;(Vector4D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                        constexpr <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0d53a574f54111711c8b854a7d1e533f">operator &gt;</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                        constexpr <span class="keywordtype">bool</span> operator &lt;=(Vector4D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                        constexpr <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac872d97149c6cab8b90dff1f7c97603d">operator &gt;=</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                    <span class="comment">//## Stream Operator ##//</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="comment"></span>                        Utility::String <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a81025403fa97f7b9e3d75be605332d5a">toString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            };</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    </div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00642"></a><span class="lineno"><a class="line" href="_n_r_e___vector4_d_8hpp.php#a57c732cb3d6101619483eb08ad00b123">  642</a></span>&#160;            constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18e63883cfb1f108eb03934517919639">operator *</a>(K k, <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u) {</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                <span class="keywordflow">return</span> u * k;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            }</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adbe956f15f3b7ed2bbb873ef01c23c96">normalize</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K, <span class="keyword">typename</span> = UseIfArithmetic&lt;K&gt;&gt;</div><div class="line"><a name="l00659"></a><span class="lineno"><a class="line" href="_n_r_e___vector4_d_8hpp.php#aed3596354178aaa54d48983d2408bf3d">  659</a></span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">pow</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, K k) {</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt;(u).<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">pow</a>(k);</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            }</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">pow</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            constexpr <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="_n_r_e___vector2_d_8hpp.php#a94f06e0023c567d982fc8e4238366987">reflect</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;K&gt;</a> <span class="keyword">const</span>&amp; n);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Point4D</a> = <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D&lt;T&gt;</a>;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        }</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespacestd.php">std</a> {</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00690"></a><span class="lineno"><a class="line" href="structstd_1_1common__type_3_01_n_r_e_1_1_math_1_1_vector4_d_3_01_t_01_4_00_01_n_r_e_1_1_math_1_1_vector4_d_3_01_k_01_4_01_4.php">  690</a></span>&#160;        <span class="keyword">struct </span>common_type&lt;<a class="code" href="namespace_n_r_e.php">NRE</a>::Math::Vector4D&lt;T&gt;, <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt;K&gt;&gt; {</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">type</a> = <a class="code" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D&lt;common_type_t &lt; T, K&gt;</a>&gt;;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        };</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    }</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;<span class="preprocessor">    #include &quot;NRE_Vector4D.tpp&quot;</span></div><div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a45d2afcd9c75e1806bc246281b44b0fd"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a45d2afcd9c75e1806bc246281b44b0fd">NRE::Math::Vector4D::setR</a></div><div class="ttdeci">constexpr void setR(K r)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:205</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_af13a90662b7c8c4370c0cf294c8153e5"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#af13a90662b7c8c4370c0cf294c8153e5">NRE::Math::Vector4D::operator*=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator*=(K k)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:449</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a></div><div class="ttdoc">A cartesian 2D vector. </div><div class="ttdef"><b>Definition:</b> NRE_Matrix3x3.hpp:32</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_af3fb5cc4b82563473058af94ed3b18dc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#af3fb5cc4b82563473058af94ed3b18dc">NRE::Math::Vector4D::getR</a></div><div class="ttdeci">constexpr T getR() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_adbe956f15f3b7ed2bbb873ef01c23c96"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#adbe956f15f3b7ed2bbb873ef01c23c96">NRE::Math::Vector4D::normalize</a></div><div class="ttdeci">Vector4D &amp; normalize()</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_afa8108fcdbead7828f99cc1a3ec669cb"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#afa8108fcdbead7828f99cc1a3ec669cb">NRE::Math::Vector4D::setY</a></div><div class="ttdeci">constexpr void setY(K nY)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:181</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aa81792f97d5ddfeb1093acd4b42489f4"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa81792f97d5ddfeb1093acd4b42489f4">NRE::Math::Vector4D::Vector4D</a></div><div class="ttdeci">constexpr Vector4D(Vector3D&lt; K &gt; const &amp;u, L nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:124</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ac9239605c0fdb6aef3f672f7555856ba"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac9239605c0fdb6aef3f672f7555856ba">NRE::Math::Vector4D::operator/=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator/=(K k)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:469</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a76ec4eab396b5ee7d4a4dbe44cc9b0cc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a76ec4eab396b5ee7d4a4dbe44cc9b0cc">NRE::Math::Vector4D::setB</a></div><div class="ttdeci">constexpr void setB(K b)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:221</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a0f6bf949e031fc140aa378573b80b43c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0f6bf949e031fc140aa378573b80b43c">NRE::Math::Vector4D::operator+=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator+=(K k)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:409</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a14c33fbf778d1fa2d84ea15a18e887dc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a14c33fbf778d1fa2d84ea15a18e887dc">NRE::Math::Vector4D::setCoord</a></div><div class="ttdeci">constexpr void setCoord(Vector2D&lt; K &gt; const &amp;u, L nZ, N nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:253</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aa35ea878fbbd5886e4227134c8eab16d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa35ea878fbbd5886e4227134c8eab16d">NRE::Math::Vector4D::value</a></div><div class="ttdeci">constexpr const T * value() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aee8da21f7a5959da0724b2079b817f3c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aee8da21f7a5959da0724b2079b817f3c">NRE::Math::Vector4D::operator[]</a></div><div class="ttdeci">constexpr T &amp; operator[](std::size_t index)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a138534e23136a793614966f44d132ee8"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a138534e23136a793614966f44d132ee8">NRE::Math::Vector4D::~Vector4D</a></div><div class="ttdeci">~Vector4D()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a18a65029d6819f46fe0e0d32445a031d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18a65029d6819f46fe0e0d32445a031d">NRE::Math::Vector4D::operator/</a></div><div class="ttdeci">constexpr Vector4D&lt; std::common_type_t&lt; T, K &gt; &gt; operator/(K k) const </div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:558</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a1a2d2b014d7f9aedc14bb777847bd973"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1a2d2b014d7f9aedc14bb777847bd973">NRE::Math::Vector4D::normSquared</a></div><div class="ttdeci">constexpr T normSquared() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aaece7843e13022cdc619f660787bb780"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aaece7843e13022cdc619f660787bb780">NRE::Math::Vector4D::operator==</a></div><div class="ttdeci">constexpr bool operator==(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a8d3a67b94eb0691b684e94790420bff2"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8d3a67b94eb0691b684e94790420bff2">NRE::Math::Vector4D::getA</a></div><div class="ttdeci">constexpr T getA() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a77a1ec531d6fe24d65640a316078f1b0"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a77a1ec531d6fe24d65640a316078f1b0">NRE::Math::Vector4D::getG</a></div><div class="ttdeci">constexpr T getG() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a6436b48d7982759f41e9a86e5d6a1f81"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6436b48d7982759f41e9a86e5d6a1f81">NRE::Math::Vector4D::Vector4D</a></div><div class="ttdeci">constexpr Vector4D(K value)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:68</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ac1baf0caf0482389c63389c4dd9e6095"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1baf0caf0482389c63389c4dd9e6095">NRE::Math::Vector4D::operator!=</a></div><div class="ttdeci">constexpr bool operator!=(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aff90194d75579e485e2dd4d66106f506"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aff90194d75579e485e2dd4d66106f506">NRE::Math::Vector3D::getY</a></div><div class="ttdeci">constexpr T getY() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a4264bad37a4155e13fed47b52fd0f432"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a4264bad37a4155e13fed47b52fd0f432">NRE::Math::Vector4D::setRGBA</a></div><div class="ttdeci">constexpr void setRGBA(K r, L g, N b, M a)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:279</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ad2ffda4c85fc211222485391e23032f9"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad2ffda4c85fc211222485391e23032f9">NRE::Math::Vector4D::operator^</a></div><div class="ttdeci">constexpr Vector4D&lt; std::common_type_t&lt; T, K &gt; &gt; operator^(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="namespace_math_php"><div class="ttname"><a href="namespace_math.php">Math</a></div><div class="ttdoc">Math&amp;#39;s API. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a81025403fa97f7b9e3d75be605332d5a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a81025403fa97f7b9e3d75be605332d5a">NRE::Math::Vector4D::toString</a></div><div class="ttdeci">Utility::String toString() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ad8e468265fac70de4534f0aa861f7788"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad8e468265fac70de4534f0aa861f7788">NRE::Math::Vector4D::norm</a></div><div class="ttdeci">long double norm() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a80f7a66bf918e4e1599e8682cb8760d1"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a80f7a66bf918e4e1599e8682cb8760d1">NRE::Math::Vector4D::operator|=</a></div><div class="ttdeci">constexpr std::common_type_t&lt; T, K &gt; operator|=(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="namespacestd_php"><div class="ttname"><a href="namespacestd.php">std</a></div><div class="ttdoc">The stl standard namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_adca379685f7e5c5dca8896ed4297b8ea"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#adca379685f7e5c5dca8896ed4297b8ea">NRE::Math::Vector4D::setCoord</a></div><div class="ttdeci">constexpr void setCoord(K nX, L nY, N nZ, M nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:240</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php">NRE::Math::Vector3D</a></div><div class="ttdoc">A cartesian 3D vector, 2D homogeneous. </div><div class="ttdef"><b>Definition:</b> NRE_Matrix3x3.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a1dd7f5e34a5deac0bf9db09f248c8730"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1dd7f5e34a5deac0bf9db09f248c8730">NRE::Math::Vector4D::operator-</a></div><div class="ttdeci">constexpr Vector4D operator-() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ac1d735d9c7ddbe26a0f12625a17acfde"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac1d735d9c7ddbe26a0f12625a17acfde">NRE::Math::Vector4D::getY</a></div><div class="ttdeci">constexpr T getY() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a79da0238087ae58ea06a7b7ec6415533"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a79da0238087ae58ea06a7b7ec6415533">NRE::Math::Vector4D::setZ</a></div><div class="ttdeci">constexpr void setZ(K nZ)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:189</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a19027e98b73f2a3787f1bd5e50019c11"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a19027e98b73f2a3787f1bd5e50019c11">NRE::Math::Vector4D::Vector4D</a></div><div class="ttdeci">constexpr Vector4D()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a0d53a574f54111711c8b854a7d1e533f"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0d53a574f54111711c8b854a7d1e533f">NRE::Math::Vector4D::operator&gt;</a></div><div class="ttdeci">constexpr bool operator&gt;(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a300e8ccce59459b1932ad4ee9db1e887"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a300e8ccce59459b1932ad4ee9db1e887">NRE::Math::Vector4D::operator^=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator^=(Vector4D&lt; K &gt; const &amp;u)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aa20df401529319ee2ba562baebc7983e"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa20df401529319ee2ba562baebc7983e">NRE::Math::Vector4D::operator+</a></div><div class="ttdeci">constexpr Vector4D&lt; std::common_type_t&lt; T, K &gt; &gt; operator+(K k) const </div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:505</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a99cc1364656712439886f1cb732ef352"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a99cc1364656712439886f1cb732ef352">NRE::Math::Vector4D::getW</a></div><div class="ttdeci">constexpr T getW() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a0692b241cf89b9f098f3fec7f8d54412"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0692b241cf89b9f098f3fec7f8d54412">NRE::Math::Vector4D::Vector4D</a></div><div class="ttdeci">constexpr Vector4D(K nX, L nY, N nZ, M nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:61</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a53dae7f469a135fb0fb1776e86fa4651"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a53dae7f469a135fb0fb1776e86fa4651">NRE::Math::Vector4D::getB</a></div><div class="ttdeci">constexpr T getB() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a09137afe7c123f664f2669037fe12bef"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a09137afe7c123f664f2669037fe12bef">NRE::Math::Vector4D::operator=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator=(Vector4D const &amp;u)=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a6b0315651d50d0ef35551109e9a31e84"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6b0315651d50d0ef35551109e9a31e84">NRE::Math::Vector4D::setRGBA</a></div><div class="ttdeci">constexpr void setRGBA(Vector3D&lt; K &gt; const &amp;u, L a)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:291</div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine&amp;#39;s global namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a04d5947c75d8c91dcfb7493e0ed765e4"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a04d5947c75d8c91dcfb7493e0ed765e4">NRE::Math::Vector4D::setX</a></div><div class="ttdeci">constexpr void setX(K nX)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:173</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a764c246bdc43173498afa08679a19b54"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a764c246bdc43173498afa08679a19b54">NRE::Math::Vector4D::distance</a></div><div class="ttdeci">long double distance(Vector4D&lt; K &gt; const &amp;v) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a0fe3d36bfc1fc6a84d5d1d54d94ba291"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0fe3d36bfc1fc6a84d5d1d54d94ba291">NRE::Math::Vector3D::getZ</a></div><div class="ttdeci">constexpr T getZ() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a></div><div class="ttdoc">A cartesian 4D vector, 3D homogeneous. </div><div class="ttdef"><b>Definition:</b> NRE_Matrix4x4.hpp:34</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aa574b0887d5921a08322d18e583ebe7d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa574b0887d5921a08322d18e583ebe7d">NRE::Math::Vector4D::setCoord</a></div><div class="ttdeci">constexpr void setCoord(Vector3D&lt; K &gt; const &amp;u, L nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:265</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aa14bcf5ffc9e9cc75673902ca2c8f8bb"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa14bcf5ffc9e9cc75673902ca2c8f8bb">NRE::Math::Vector4D::Vector4D</a></div><div class="ttdeci">constexpr Vector4D(Vector2D&lt; K &gt; const &amp;u, L nZ, N nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:110</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a3a2394b397491fcd9493a1108f30109c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a3a2394b397491fcd9493a1108f30109c">NRE::Math::Vector2D::getX</a></div><div class="ttdeci">constexpr T getX() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a55660d650c7a16d7a00bd9e84494ffe5"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a55660d650c7a16d7a00bd9e84494ffe5">NRE::Math::Vector4D::distanceSquared</a></div><div class="ttdeci">constexpr std::common_type_t&lt; T, K &gt; distanceSquared(Vector4D&lt; K &gt; const &amp;v) const </div></div>
<div class="ttc" id="_n_r_e___vector2_d_8hpp_php_a94f06e0023c567d982fc8e4238366987"><div class="ttname"><a href="_n_r_e___vector2_d_8hpp.php#a94f06e0023c567d982fc8e4238366987">NRE::Math::reflect</a></div><div class="ttdeci">constexpr Vector2D&lt; std::common_type_t&lt; T, K &gt; &gt; reflect(Vector2D&lt; T &gt; const &amp;u, Vector2D&lt; K &gt; const &amp;n)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a18e63883cfb1f108eb03934517919639"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a18e63883cfb1f108eb03934517919639">NRE::Math::Vector4D::operator*</a></div><div class="ttdeci">constexpr Vector4D&lt; std::common_type_t&lt; T, K &gt; &gt; operator*(K k) const </div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:542</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_acd1ddc911ce3fc2f1a1b5795899d176e"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#acd1ddc911ce3fc2f1a1b5795899d176e">NRE::Math::Vector4D::limit</a></div><div class="ttdeci">void limit(K max)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:327</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_aeecd7aa4d6f8ba5466789ed9d2e67bd1"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#aeecd7aa4d6f8ba5466789ed9d2e67bd1">NRE::Math::Vector4D::pow</a></div><div class="ttdeci">Vector4D &amp; pow(K p)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:339</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_af9a91fc8105a8ca449270747273f5b79"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#af9a91fc8105a8ca449270747273f5b79">NRE::Math::Vector4D::getX</a></div><div class="ttdeci">constexpr T getX() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a6d05d7242e635d6d30f65349a64653a0"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6d05d7242e635d6d30f65349a64653a0">NRE::Math::Vector4D::getZ</a></div><div class="ttdeci">constexpr T getZ() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a8fa14964830b9692edcda6e8f90e0173"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8fa14964830b9692edcda6e8f90e0173">NRE::Math::Vector4D::setA</a></div><div class="ttdeci">constexpr void setA(K a)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:229</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a6f38989cfecc5987fdda4126ecdc17e2"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a6f38989cfecc5987fdda4126ecdc17e2">NRE::Math::Vector3D::getX</a></div><div class="ttdeci">constexpr T getX() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_acf56542d31864002de9b80a04c876696"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#acf56542d31864002de9b80a04c876696">NRE::Math::Vector4D::operator-=</a></div><div class="ttdeci">constexpr Vector4D &amp; operator-=(K k)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:429</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a6ef39837a99282f34b7b725270488c1d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6ef39837a99282f34b7b725270488c1d">NRE::Math::Vector4D::operator|</a></div><div class="ttdeci">constexpr std::common_type_t&lt; T, K &gt; operator|(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_acab4df35acef9a21408882db7b0dea7a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#acab4df35acef9a21408882db7b0dea7a">NRE::Math::Vector2D::getY</a></div><div class="ttdeci">constexpr T getY() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_a15b2d9117d59f4629811024f1aa4edc9"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#a15b2d9117d59f4629811024f1aa4edc9">NRE::Math::Vector4D::setG</a></div><div class="ttdeci">constexpr void setG(K g)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:213</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ac872d97149c6cab8b90dff1f7c97603d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac872d97149c6cab8b90dff1f7c97603d">NRE::Math::Vector4D::operator&gt;=</a></div><div class="ttdeci">constexpr bool operator&gt;=(Vector4D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector4_d_php_ae7ec81b403156543fb7d032b93dae33c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae7ec81b403156543fb7d032b93dae33c">NRE::Math::Vector4D::setW</a></div><div class="ttdeci">constexpr void setW(K nW)</div><div class="ttdef"><b>Definition:</b> NRE_Vector4D.hpp:197</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
