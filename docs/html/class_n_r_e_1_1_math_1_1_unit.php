<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: NRE::Math::Unit&lt; M, L, T, A &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <nav class="navbar navbar-default" role="navigation">
            <div class="container">
                <header class="page-header">
                    <a href="../../../index.php">
                        <img src="../../img/Logo.png" class="logo img-responsive"/>
                    </a>
                </header>
                <?php addNavigationBarInl(false); ?>
                <div class="navbar-header">
                    <a class="navbar-brand">NRE-Math 1.0.0</a>
                </div>
            </div>
        </nav>
        <div id="top"><!-- do not remove this div, it is closed by doxygen! -->
            <div class="content" id="content">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-12 panel " style="padding-bottom: 15px;">
                            <div style="margin-bottom: 15px;">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Math</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_math_1_1_unit-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Math::Unit&lt; M, L, T, A &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Used to define clear physical unit.  
 <a href="class_n_r_e_1_1_math_1_1_unit.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___unit_8hpp_source.php">NRE_Unit.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acde0194bb69bc8d6bebf8ceb0b142426"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#acde0194bb69bc8d6bebf8ceb0b142426">Unit</a> ()</td></tr>
<tr class="separator:acde0194bb69bc8d6bebf8ceb0b142426"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad35ea8e9a0c033c4a7dbb5ed85c697d5"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#ad35ea8e9a0c033c4a7dbb5ed85c697d5">Unit</a> (double val)</td></tr>
<tr class="separator:ad35ea8e9a0c033c4a7dbb5ed85c697d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f50b4134b5da67ed498f0ef167b602"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#aa6f50b4134b5da67ed498f0ef167b602">Unit</a> (long double val)</td></tr>
<tr class="separator:aa6f50b4134b5da67ed498f0ef167b602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ef43f0978c973892ec6ee475ebd1d8d"><td class="memItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a8ef43f0978c973892ec6ee475ebd1d8d">getValue</a> () const </td></tr>
<tr class="separator:a8ef43f0978c973892ec6ee475ebd1d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a728734518d0ef3c6fbe39e8093d44287"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; std::ratio_divide&lt; M, std::ratio&lt; 2 &gt; &gt;, std::ratio_divide&lt; L, std::ratio&lt; 2 &gt; &gt;, std::ratio_divide&lt; T, std::ratio&lt; 2 &gt; &gt;, std::ratio_divide&lt; A, std::ratio&lt; 2 &gt; &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a728734518d0ef3c6fbe39e8093d44287">sqrt</a> ()</td></tr>
<tr class="separator:a728734518d0ef3c6fbe39e8093d44287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70cf71def75fa1c8c6daa7a083ec8e3"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#af70cf71def75fa1c8c6daa7a083ec8e3">operator+=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u)</td></tr>
<tr class="separator:af70cf71def75fa1c8c6daa7a083ec8e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36c98e1e59edd06148aced23fd0b347"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#af36c98e1e59edd06148aced23fd0b347">operator-=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u)</td></tr>
<tr class="separator:af36c98e1e59edd06148aced23fd0b347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad395b12f20018095c4ddba74531a4f22"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#ad395b12f20018095c4ddba74531a4f22">operator-</a> () const </td></tr>
<tr class="separator:ad395b12f20018095c4ddba74531a4f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a571c89a1d60706d1a5d7923feecf5a39"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a571c89a1d60706d1a5d7923feecf5a39">operator+</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a571c89a1d60706d1a5d7923feecf5a39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39807af96b26a877e11fd82705f94676"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a39807af96b26a877e11fd82705f94676">operator-</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a39807af96b26a877e11fd82705f94676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e285181e6cbf15a0c03235062bfb3a0"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a3e285181e6cbf15a0c03235062bfb3a0">operator==</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a3e285181e6cbf15a0c03235062bfb3a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7c1f86cd9a1c6a6d02c6ed251f56d08"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#aa7c1f86cd9a1c6a6d02c6ed251f56d08">operator!=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:aa7c1f86cd9a1c6a6d02c6ed251f56d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7d0a14ab68567e3b917d783df57d4bc"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#ad7d0a14ab68567e3b917d783df57d4bc">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:ad7d0a14ab68567e3b917d783df57d4bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cc535353c6a7c0f7b741eddb1eb1328"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a5cc535353c6a7c0f7b741eddb1eb1328">operator&gt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a5cc535353c6a7c0f7b741eddb1eb1328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57861b23767a77366a10f56c28afb081"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a57861b23767a77366a10f56c28afb081">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a57861b23767a77366a10f56c28afb081"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57b0e40e80ebccbe92dec4ddcc688b30"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a57b0e40e80ebccbe92dec4ddcc688b30">operator&gt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const &amp;u) const </td></tr>
<tr class="separator:a57b0e40e80ebccbe92dec4ddcc688b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ffd93a73fda8541d6bd28c4bdb0da7"><td class="memItemLeft" align="right" valign="top">constexpr Utility::String&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php#a29ffd93a73fda8541d6bd28c4bdb0da7">toString</a> () const </td></tr>
<tr class="separator:a29ffd93a73fda8541d6bd28c4bdb0da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class M, class L, class T, class A&gt;<br />
class NRE::Math::Unit&lt; M, L, T, A &gt;</h3>

<p>Used to define clear physical unit. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acde0194bb69bc8d6bebf8ceb0b142426"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor </p>

</div>
</div>
<a class="anchor" id="ad35ea8e9a0c033c4a7dbb5ed85c697d5"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct a unit from a value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>the base value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa6f50b4134b5da67ed498f0ef167b602"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> </td>
          <td>(</td>
          <td class="paramtype">long double&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct a unit from a value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td>the base value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8ef43f0978c973892ec6ee475ebd1d8d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr double <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::getValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Value getter </p><dl class="section return"><dt>Returns</dt><dd>the internal value </dd></dl>

</div>
</div>
<a class="anchor" id="aa7c1f86cd9a1c6a6d02c6ed251f56d08"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator!= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Difference test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="a571c89a1d60706d1a5d7923feecf5a39"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Compute the unit resulting in the addition of a unit to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting unit </dd></dl>

</div>
</div>
<a class="anchor" id="af70cf71def75fa1c8c6daa7a083ec8e3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add a unit to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to himself </dd></dl>

</div>
</div>
<a class="anchor" id="ad395b12f20018095c4ddba74531a4f22"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator- </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Compute the opposite unit </p><dl class="section return"><dt>Returns</dt><dd>the new unit with opposite value </dd></dl>

</div>
</div>
<a class="anchor" id="a39807af96b26a877e11fd82705f94676"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Compute the unit resulting in the subtraction of a unit to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting unit </dd></dl>

</div>
</div>
<a class="anchor" id="af36c98e1e59edd06148aced23fd0b347"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a> const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator-= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Subtract a unit to this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to subtract </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to himself </dd></dl>

</div>
</div>
<a class="anchor" id="a57861b23767a77366a10f56c28afb081"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inferior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="ad7d0a14ab68567e3b917d783df57d4bc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Superior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="a3e285181e6cbf15a0c03235062bfb3a0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Equality test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="a57b0e40e80ebccbe92dec4ddcc688b30"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Superior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="a5cc535353c6a7c0f7b741eddb1eb1328"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt; M, L, T, A &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the unit to test with u </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's value </dd></dl>

</div>
</div>
<a class="anchor" id="a728734518d0ef3c6fbe39e8093d44287"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">Unit</a>&lt;std::ratio_divide&lt;M, std::ratio&lt;2&gt; &gt;, std::ratio_divide&lt;L, std::ratio&lt;2&gt; &gt;, std::ratio_divide&lt;T, std::ratio&lt;2&gt; &gt;, std::ratio_divide&lt;A, std::ratio&lt;2&gt; &gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::sqrt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Compute the square root from the current unit </p><dl class="section return"><dt>Returns</dt><dd>the computed value </dd></dl>

</div>
</div>
<a class="anchor" id="a29ffd93a73fda8541d6bd28c4bdb0da7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class M, class L, class T, class A&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr Utility::String <a class="el" href="class_n_r_e_1_1_math_1_1_unit.php">NRE::Math::Unit</a>&lt; M, L, T, A &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Convert the unit into a string </p><dl class="section return"><dt>Returns</dt><dd>the converted unit </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/mnt/c/Users/abell/Documents/GitHub/NRE-Math/src/Math/<a class="el" href="_n_r_e___unit_8hpp_source.php">NRE_Unit.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>
Generated on Sun Aug 11 2019 18:37:55 for NRE-Math by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.11
</small></address>
</body>
</html>
