<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.15"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: NRE::Math::Vector2D&lt; T &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Math</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_math_1_1_vector2_d-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Math::Vector2D&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A cartesian 2D vector.  
 <a href="class_n_r_e_1_1_math_1_1_vector2_d.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___vector2_d_8hpp_source.php">NRE_Vector2D.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NRE::Math::Vector2D&lt; T &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_math_1_1_vector2_d.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a595aec6f7e7525985ab18cb582ef7c13"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> ()=default</td></tr>
<tr class="separator:a595aec6f7e7525985ab18cb582ef7c13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9063228268886f665fd01f9b232995f0"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:a9063228268886f665fd01f9b232995f0"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9063228268886f665fd01f9b232995f0">Vector2D</a> (K nX, L nY)</td></tr>
<tr class="separator:a9063228268886f665fd01f9b232995f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5991caa1d1fc91b4871b8c4c52486b0d"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5991caa1d1fc91b4871b8c4c52486b0d"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5991caa1d1fc91b4871b8c4c52486b0d">Vector2D</a> (K <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a75d53f546ab349d9d4f2894ca2e2c449">value</a>)</td></tr>
<tr class="separator:a5991caa1d1fc91b4871b8c4c52486b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2992f34a96baa3f8fb3914756ed8aa16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2992f34a96baa3f8fb3914756ed8aa16">Vector2D</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:a2992f34a96baa3f8fb3914756ed8aa16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1bd88b851869203e61dead077fc4ed1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab1bd88b851869203e61dead077fc4ed1">Vector2D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> const &amp;u)=default</td></tr>
<tr class="separator:ab1bd88b851869203e61dead077fc4ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6fb7c9b33b3425db224a59ee7ef2c0e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab6fb7c9b33b3425db224a59ee7ef2c0e">Vector2D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&amp;u)=default</td></tr>
<tr class="separator:ab6fb7c9b33b3425db224a59ee7ef2c0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cddd051d79a338dd9b48e7559c552db"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a7cddd051d79a338dd9b48e7559c552db"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a7cddd051d79a338dd9b48e7559c552db">Vector2D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a7cddd051d79a338dd9b48e7559c552db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade888a45f641093719ddccdeea02653e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ade888a45f641093719ddccdeea02653e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ade888a45f641093719ddccdeea02653e">Vector2D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:ade888a45f641093719ddccdeea02653e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e1c65a4c80d0fb03c1853df125c0171"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a2e1c65a4c80d0fb03c1853df125c0171"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2e1c65a4c80d0fb03c1853df125c0171">Vector2D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a2e1c65a4c80d0fb03c1853df125c0171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb663aece6c51298c9da392e8d338474"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aeb663aece6c51298c9da392e8d338474">~Vector2D</a> ()=default</td></tr>
<tr class="separator:aeb663aece6c51298c9da392e8d338474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61896a30a0012d4dda16dee15e78a1d0"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a61896a30a0012d4dda16dee15e78a1d0">getX</a> () const</td></tr>
<tr class="separator:a61896a30a0012d4dda16dee15e78a1d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a9d3b53dcd9c891a2ce462ff0f79770"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2a9d3b53dcd9c891a2ce462ff0f79770">getY</a> () const</td></tr>
<tr class="separator:a2a9d3b53dcd9c891a2ce462ff0f79770"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67afe02f4b0dceaf1ef2f708d3459d5f"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a67afe02f4b0dceaf1ef2f708d3459d5f">getW</a> () const</td></tr>
<tr class="separator:a67afe02f4b0dceaf1ef2f708d3459d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a431744856eb2b6798369e1eb7b2a9715"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a431744856eb2b6798369e1eb7b2a9715">getH</a> () const</td></tr>
<tr class="separator:a431744856eb2b6798369e1eb7b2a9715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ccf2960e862f29ecb8f7376446ed549"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a2ccf2960e862f29ecb8f7376446ed549"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2ccf2960e862f29ecb8f7376446ed549">setX</a> (K nX)</td></tr>
<tr class="separator:a2ccf2960e862f29ecb8f7376446ed549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabcceaaaa83104c3d7a1d4dbe2b77e6"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:adabcceaaaa83104c3d7a1d4dbe2b77e6"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#adabcceaaaa83104c3d7a1d4dbe2b77e6">setY</a> (K nY)</td></tr>
<tr class="separator:adabcceaaaa83104c3d7a1d4dbe2b77e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5b1b01769cefbdd771f3e43c411ecda"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab5b1b01769cefbdd771f3e43c411ecda"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab5b1b01769cefbdd771f3e43c411ecda">setW</a> (K w)</td></tr>
<tr class="separator:ab5b1b01769cefbdd771f3e43c411ecda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a769505baef52b12436e9ea336ddbdd7d"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a769505baef52b12436e9ea336ddbdd7d"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a769505baef52b12436e9ea336ddbdd7d">setH</a> (K h)</td></tr>
<tr class="separator:a769505baef52b12436e9ea336ddbdd7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5969272e8f11b1844dbe051d32855255"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:a5969272e8f11b1844dbe051d32855255"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5969272e8f11b1844dbe051d32855255">setCoord</a> (K nX, L nY)</td></tr>
<tr class="separator:a5969272e8f11b1844dbe051d32855255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac18d18ff1fe2c6231b7c9721972fc748"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:ac18d18ff1fe2c6231b7c9721972fc748"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ac18d18ff1fe2c6231b7c9721972fc748">setSize</a> (K w, L h)</td></tr>
<tr class="separator:ac18d18ff1fe2c6231b7c9721972fc748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b392c0304271cb5448e7714bcf1b848"><td class="memItemLeft" align="right" valign="top">long double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2b392c0304271cb5448e7714bcf1b848">norm</a> () const</td></tr>
<tr class="separator:a2b392c0304271cb5448e7714bcf1b848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae8ecfa1d49cbdb524aebc45ffd999f3"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aae8ecfa1d49cbdb524aebc45ffd999f3">normSquared</a> () const</td></tr>
<tr class="separator:aae8ecfa1d49cbdb524aebc45ffd999f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa35bc61b9f3a3bb58898d3c0eb77b1d0"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aa35bc61b9f3a3bb58898d3c0eb77b1d0"><td class="memTemplItemLeft" align="right" valign="top">long double&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa35bc61b9f3a3bb58898d3c0eb77b1d0">distance</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;v) const</td></tr>
<tr class="separator:aa35bc61b9f3a3bb58898d3c0eb77b1d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88beefc5f4fe6b2d6f22df0488b741f7"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a88beefc5f4fe6b2d6f22df0488b741f7"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a88beefc5f4fe6b2d6f22df0488b741f7">distanceSquared</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;v) const</td></tr>
<tr class="separator:a88beefc5f4fe6b2d6f22df0488b741f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21b03c6f25466279eaed82addf1b9e76"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a21b03c6f25466279eaed82addf1b9e76">normalize</a> ()</td></tr>
<tr class="separator:a21b03c6f25466279eaed82addf1b9e76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cc9306e2ebef16c9752f4495444cc87"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9cc9306e2ebef16c9752f4495444cc87"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9cc9306e2ebef16c9752f4495444cc87">limit</a> (K max)</td></tr>
<tr class="separator:a9cc9306e2ebef16c9752f4495444cc87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab475aefbb7bd6a669a177aecdcd48b89"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab475aefbb7bd6a669a177aecdcd48b89"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab475aefbb7bd6a669a177aecdcd48b89">pow</a> (K p)</td></tr>
<tr class="separator:ab475aefbb7bd6a669a177aecdcd48b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca861dd2ea247f94885776b71321a5a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a1ca861dd2ea247f94885776b71321a5a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1ca861dd2ea247f94885776b71321a5a">pow</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;p)</td></tr>
<tr class="separator:a1ca861dd2ea247f94885776b71321a5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d53f546ab349d9d4f2894ca2e2c449"><td class="memItemLeft" align="right" valign="top">const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a75d53f546ab349d9d4f2894ca2e2c449">value</a> () const</td></tr>
<tr class="separator:a75d53f546ab349d9d4f2894ca2e2c449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026b4e8d3ba98577886e41cf3674a83a"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a026b4e8d3ba98577886e41cf3674a83a">operator []</a> (std::size_t index)</td></tr>
<tr class="separator:a026b4e8d3ba98577886e41cf3674a83a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5893a40a434f15fa01b1741c80326cd"><td class="memItemLeft" align="right" valign="top">T const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ac5893a40a434f15fa01b1741c80326cd">operator []</a> (std::size_t index) const</td></tr>
<tr class="separator:ac5893a40a434f15fa01b1741c80326cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4dd5359297e9e638980faf8b0a86fec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> const &amp;u)=default</td></tr>
<tr class="separator:af4dd5359297e9e638980faf8b0a86fec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bf5d70ea419a833ef9b015839c6a12"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a59bf5d70ea419a833ef9b015839c6a12">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&amp;u)=default</td></tr>
<tr class="separator:a59bf5d70ea419a833ef9b015839c6a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709ec41d1e1b7101286d4629178a7b75"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a709ec41d1e1b7101286d4629178a7b75"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a709ec41d1e1b7101286d4629178a7b75">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a709ec41d1e1b7101286d4629178a7b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab560b6c8821adedfb37968074e530f21"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab560b6c8821adedfb37968074e530f21"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab560b6c8821adedfb37968074e530f21">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; &amp;&amp;u)</td></tr>
<tr class="separator:ab560b6c8821adedfb37968074e530f21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acac64d98f1d95bd16e5ed5ae02754283"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:acac64d98f1d95bd16e5ed5ae02754283"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#acac64d98f1d95bd16e5ed5ae02754283">operator+=</a> (K k)</td></tr>
<tr class="separator:acac64d98f1d95bd16e5ed5ae02754283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9be0e23c41afb2a2bd25382b30c3b76"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad9be0e23c41afb2a2bd25382b30c3b76"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ad9be0e23c41afb2a2bd25382b30c3b76">operator+=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:ad9be0e23c41afb2a2bd25382b30c3b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60079a1c5c3264f39db744bf0ef6e4b5"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a60079a1c5c3264f39db744bf0ef6e4b5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a60079a1c5c3264f39db744bf0ef6e4b5">operator -=</a> (K k)</td></tr>
<tr class="separator:a60079a1c5c3264f39db744bf0ef6e4b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab68395c7635bb6d27865412e04659006"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab68395c7635bb6d27865412e04659006"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab68395c7635bb6d27865412e04659006">operator -=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:ab68395c7635bb6d27865412e04659006"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46a7efc184b850cd9093c5abb2336702"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a46a7efc184b850cd9093c5abb2336702"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a46a7efc184b850cd9093c5abb2336702">operator *=</a> (K k)</td></tr>
<tr class="separator:a46a7efc184b850cd9093c5abb2336702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4095d0a3a3048e89539448d3f13f01"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5f4095d0a3a3048e89539448d3f13f01"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5f4095d0a3a3048e89539448d3f13f01">operator *=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a5f4095d0a3a3048e89539448d3f13f01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdfbe163dee1d5fe2dffc25d7b6ed40d"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:abdfbe163dee1d5fe2dffc25d7b6ed40d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abdfbe163dee1d5fe2dffc25d7b6ed40d">operator/=</a> (K k)</td></tr>
<tr class="separator:abdfbe163dee1d5fe2dffc25d7b6ed40d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a689dcfeb9207652d5aabc45432ca0f1e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a689dcfeb9207652d5aabc45432ca0f1e"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a689dcfeb9207652d5aabc45432ca0f1e">operator/=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a689dcfeb9207652d5aabc45432ca0f1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b9cb23d1d592506dca6065ece2a141a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4b9cb23d1d592506dca6065ece2a141a"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4b9cb23d1d592506dca6065ece2a141a">operator|=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a4b9cb23d1d592506dca6065ece2a141a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e6c49e71e7acb72b0b8413d05924eab"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a6e6c49e71e7acb72b0b8413d05924eab"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a6e6c49e71e7acb72b0b8413d05924eab">operator+</a> (K k) const</td></tr>
<tr class="separator:a6e6c49e71e7acb72b0b8413d05924eab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b902d6642599ebdee6628f8e9c93018"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4b902d6642599ebdee6628f8e9c93018"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4b902d6642599ebdee6628f8e9c93018">operator+</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a4b902d6642599ebdee6628f8e9c93018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30bd2f48694969d9795223ff75fa411a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a30bd2f48694969d9795223ff75fa411a"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a30bd2f48694969d9795223ff75fa411a">operator -</a> (K k) const</td></tr>
<tr class="separator:a30bd2f48694969d9795223ff75fa411a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a150b982c5ff6c0e9f193591e8731f3ce"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a150b982c5ff6c0e9f193591e8731f3ce"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a150b982c5ff6c0e9f193591e8731f3ce">operator -</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a150b982c5ff6c0e9f193591e8731f3ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa68351ab724ceca790240e78834e4dfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa68351ab724ceca790240e78834e4dfb">operator -</a> () const</td></tr>
<tr class="separator:aa68351ab724ceca790240e78834e4dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf2949669220e723edf84198ae032acc"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:abf2949669220e723edf84198ae032acc"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abf2949669220e723edf84198ae032acc">operator *</a> (K k) const</td></tr>
<tr class="separator:abf2949669220e723edf84198ae032acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9069b3154b94f06f0843350669c1977"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad9069b3154b94f06f0843350669c1977"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ad9069b3154b94f06f0843350669c1977">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:ad9069b3154b94f06f0843350669c1977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e808cb8e5f17b19e3920eec6e36ea3c"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5e808cb8e5f17b19e3920eec6e36ea3c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5e808cb8e5f17b19e3920eec6e36ea3c">operator/</a> (K k) const</td></tr>
<tr class="separator:a5e808cb8e5f17b19e3920eec6e36ea3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aead7b52ca77abf3184ff744845e3f393"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aead7b52ca77abf3184ff744845e3f393"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aead7b52ca77abf3184ff744845e3f393">operator/</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:aead7b52ca77abf3184ff744845e3f393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e95a7ac6f8a5ee3492fef7f3515a014"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9e95a7ac6f8a5ee3492fef7f3515a014"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9e95a7ac6f8a5ee3492fef7f3515a014">operator|</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a9e95a7ac6f8a5ee3492fef7f3515a014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2348adf636168e4eb09562f2b9cb658e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a2348adf636168e4eb09562f2b9cb658e"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2348adf636168e4eb09562f2b9cb658e">operator==</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a2348adf636168e4eb09562f2b9cb658e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eed1f3bde6f3657549d7bbf3cda2854"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a1eed1f3bde6f3657549d7bbf3cda2854"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1eed1f3bde6f3657549d7bbf3cda2854">operator !=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a1eed1f3bde6f3657549d7bbf3cda2854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4636215ba01fc6796533331a21e08c1b"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4636215ba01fc6796533331a21e08c1b"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4636215ba01fc6796533331a21e08c1b">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a4636215ba01fc6796533331a21e08c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d5c377685b942c669c1988ffff4aae2"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4d5c377685b942c669c1988ffff4aae2"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4d5c377685b942c669c1988ffff4aae2">operator &gt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a4d5c377685b942c669c1988ffff4aae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd17be72091a5669c96aca3e24d14f5b"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:afd17be72091a5669c96aca3e24d14f5b"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#afd17be72091a5669c96aca3e24d14f5b">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:afd17be72091a5669c96aca3e24d14f5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1951ea9da1f75bb58712dba335c1e84d"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a1951ea9da1f75bb58712dba335c1e84d"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1951ea9da1f75bb58712dba335c1e84d">operator &gt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a1951ea9da1f75bb58712dba335c1e84d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4f065905420acf119e79b020d61c5c"><td class="memItemLeft" align="right" valign="top">Utility::String&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aac4f065905420acf119e79b020d61c5c">toString</a> () const</td></tr>
<tr class="separator:aac4f065905420acf119e79b020d61c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class NRE::Math::Vector2D&lt; T &gt;</h3>

<p>A cartesian 2D vector. </p>
<dl class="section warning"><dt>Warning</dt><dd>Use this vector with POD type only </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a595aec6f7e7525985ab18cb582ef7c13"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a595aec6f7e7525985ab18cb582ef7c13">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[1/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct the null vector </p>

</div>
</div>
<a id="a9063228268886f665fd01f9b232995f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9063228268886f665fd01f9b232995f0">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[2/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector with passed values </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>new x value </td></tr>
    <tr><td class="paramname">nY</td><td>new y value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5991caa1d1fc91b4871b8c4c52486b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5991caa1d1fc91b4871b8c4c52486b0d">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[3/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector with unique values </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the new x and y values </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2992f34a96baa3f8fb3914756ed8aa16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2992f34a96baa3f8fb3914756ed8aa16">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[4/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector from an initializer list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the construction list </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab1bd88b851869203e61dead077fc4ed1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1bd88b851869203e61dead077fc4ed1">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[5/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab6fb7c9b33b3425db224a59ee7ef2c0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6fb7c9b33b3425db224a59ee7ef2c0e">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[6/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7cddd051d79a338dd9b48e7559c552db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cddd051d79a338dd9b48e7559c552db">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[7/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type vector into a T-type vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the K-type vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ade888a45f641093719ddccdeea02653e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade888a45f641093719ddccdeea02653e">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[8/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type 3D vector into a T-type 2D vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the K-type 3D vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2e1c65a4c80d0fb03c1853df125c0171"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e1c65a4c80d0fb03c1853df125c0171">&#9670;&nbsp;</a></span>Vector2D() <span class="overload">[9/9]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type 4D vector into a T-type 2D vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the K-type 4D vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeb663aece6c51298c9da392e8d338474"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb663aece6c51298c9da392e8d338474">&#9670;&nbsp;</a></span>~Vector2D()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::~<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php" title="A cartesian 2D vector.">Vector2D</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa35bc61b9f3a3bb58898d3c0eb77b1d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa35bc61b9f3a3bb58898d3c0eb77b1d0">&#9670;&nbsp;</a></span>distance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">long double <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::distance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the distance to another vector </dd></dl>

</div>
</div>
<a id="a88beefc5f4fe6b2d6f22df0488b741f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88beefc5f4fe6b2d6f22df0488b741f7">&#9670;&nbsp;</a></span>distanceSquared()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::distanceSquared </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the squared distance to another vector </dd></dl>

</div>
</div>
<a id="a431744856eb2b6798369e1eb7b2a9715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a431744856eb2b6798369e1eb7b2a9715">&#9670;&nbsp;</a></span>getH()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::getH </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the y value </dd></dl>

</div>
</div>
<a id="a67afe02f4b0dceaf1ef2f708d3459d5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67afe02f4b0dceaf1ef2f708d3459d5f">&#9670;&nbsp;</a></span>getW()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::getW </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x value </dd></dl>

</div>
</div>
<a id="a61896a30a0012d4dda16dee15e78a1d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61896a30a0012d4dda16dee15e78a1d0">&#9670;&nbsp;</a></span>getX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::getX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x value </dd></dl>

</div>
</div>
<a id="a2a9d3b53dcd9c891a2ce462ff0f79770"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a9d3b53dcd9c891a2ce462ff0f79770">&#9670;&nbsp;</a></span>getY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::getY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x value </dd></dl>

</div>
</div>
<a id="a9cc9306e2ebef16c9752f4495444cc87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cc9306e2ebef16c9752f4495444cc87">&#9670;&nbsp;</a></span>limit()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::limit </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Limit the vector value to the given max, if to high then normalize it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">max</td><td>the maximum value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2b392c0304271cb5448e7714bcf1b848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b392c0304271cb5448e7714bcf1b848">&#9670;&nbsp;</a></span>norm()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">long double <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::norm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the vector's norm </dd></dl>

</div>
</div>
<a id="a21b03c6f25466279eaed82addf1b9e76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21b03c6f25466279eaed82addf1b9e76">&#9670;&nbsp;</a></span>normalize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::normalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Normalize the vector </p><dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="aae8ecfa1d49cbdb524aebc45ffd999f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae8ecfa1d49cbdb524aebc45ffd999f3">&#9670;&nbsp;</a></span>normSquared()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::normSquared </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the squared vector's norm </dd></dl>

</div>
</div>
<a id="a1eed1f3bde6f3657549d7bbf3cda2854"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1eed1f3bde6f3657549d7bbf3cda2854">&#9670;&nbsp;</a></span>operator !=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator != </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Difference test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="abf2949669220e723edf84198ae032acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf2949669220e723edf84198ae032acc">&#9670;&nbsp;</a></span>operator *() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the multiplication of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="ad9069b3154b94f06f0843350669c1977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9069b3154b94f06f0843350669c1977">&#9670;&nbsp;</a></span>operator *() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the multiplication of this by u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the multiplication vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a46a7efc184b850cd9093c5abb2336702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46a7efc184b850cd9093c5abb2336702">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this by a factor k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a5f4095d0a3a3048e89539448d3f13f01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f4095d0a3a3048e89539448d3f13f01">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this by a vector u, component by component </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the multiplication vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a30bd2f48694969d9795223ff75fa411a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30bd2f48694969d9795223ff75fa411a">&#9670;&nbsp;</a></span>operator -() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the subtraction of k into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a150b982c5ff6c0e9f193591e8731f3ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a150b982c5ff6c0e9f193591e8731f3ce">&#9670;&nbsp;</a></span>operator -() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the subtraction of u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to subtract </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="aa68351ab724ceca790240e78834e4dfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa68351ab724ceca790240e78834e4dfb">&#9670;&nbsp;</a></span>operator -() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a> <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the opposite version of this </p><dl class="section return"><dt>Returns</dt><dd>the opposite vector </dd></dl>

</div>
</div>
<a id="a60079a1c5c3264f39db744bf0ef6e4b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60079a1c5c3264f39db744bf0ef6e4b5">&#9670;&nbsp;</a></span>operator -=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Subtract a scalar to all components </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ab68395c7635bb6d27865412e04659006"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab68395c7635bb6d27865412e04659006">&#9670;&nbsp;</a></span>operator -=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Subtract a vector into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to subtract into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a4d5c377685b942c669c1988ffff4aae2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d5c377685b942c669c1988ffff4aae2">&#9670;&nbsp;</a></span>operator &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a1951ea9da1f75bb58712dba335c1e84d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1951ea9da1f75bb58712dba335c1e84d">&#9670;&nbsp;</a></span>operator &gt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator &gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a026b4e8d3ba98577886e41cf3674a83a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a026b4e8d3ba98577886e41cf3674a83a">&#9670;&nbsp;</a></span>operator []() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a reference on a vector's object </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the object's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's reference </dd></dl>

</div>
</div>
<a id="ac5893a40a434f15fa01b1741c80326cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5893a40a434f15fa01b1741c80326cd">&#9670;&nbsp;</a></span>operator []() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a const reference on a vector's object </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the object's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's reference </dd></dl>

</div>
</div>
<a id="a6e6c49e71e7acb72b0b8413d05924eab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e6c49e71e7acb72b0b8413d05924eab">&#9670;&nbsp;</a></span>operator+() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the addition of k into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a4b902d6642599ebdee6628f8e9c93018"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b902d6642599ebdee6628f8e9c93018">&#9670;&nbsp;</a></span>operator+() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the addition of u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="acac64d98f1d95bd16e5ed5ae02754283"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acac64d98f1d95bd16e5ed5ae02754283">&#9670;&nbsp;</a></span>operator+=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a scalar to all components </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ad9be0e23c41afb2a2bd25382b30c3b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9be0e23c41afb2a2bd25382b30c3b76">&#9670;&nbsp;</a></span>operator+=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a vector into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to add into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a5e808cb8e5f17b19e3920eec6e36ea3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e808cb8e5f17b19e3920eec6e36ea3c">&#9670;&nbsp;</a></span>operator/() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the division of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="aead7b52ca77abf3184ff744845e3f393"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aead7b52ca77abf3184ff744845e3f393">&#9670;&nbsp;</a></span>operator/() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the division of this by u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the division vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="abdfbe163dee1d5fe2dffc25d7b6ed40d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdfbe163dee1d5fe2dffc25d7b6ed40d">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this by a factor k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a689dcfeb9207652d5aabc45432ca0f1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a689dcfeb9207652d5aabc45432ca0f1e">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this by a vector u, component by component </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the division vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a4636215ba01fc6796533331a21e08c1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4636215ba01fc6796533331a21e08c1b">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="afd17be72091a5669c96aca3e24d14f5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd17be72091a5669c96aca3e24d14f5b">&#9670;&nbsp;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="af4dd5359297e9e638980faf8b0a86fec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4dd5359297e9e638980faf8b0a86fec">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a59bf5d70ea419a833ef9b015839c6a12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59bf5d70ea419a833ef9b015839c6a12">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a709ec41d1e1b7101286d4629178a7b75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a709ec41d1e1b7101286d4629178a7b75">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ab560b6c8821adedfb37968074e530f21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab560b6c8821adedfb37968074e530f21">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a2348adf636168e4eb09562f2b9cb658e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2348adf636168e4eb09562f2b9cb658e">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a9e95a7ac6f8a5ee3492fef7f3515a014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e95a7ac6f8a5ee3492fef7f3515a014">&#9670;&nbsp;</a></span>operator|()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator| </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the scalar product between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the scalar product </dd></dl>

</div>
</div>
<a id="a4b9cb23d1d592506dca6065ece2a141a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b9cb23d1d592506dca6065ece2a141a">&#9670;&nbsp;</a></span>operator|=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::operator|= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the scalar product between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the scalar product </dd></dl>

</div>
</div>
<a id="ab475aefbb7bd6a669a177aecdcd48b89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab475aefbb7bd6a669a177aecdcd48b89">&#9670;&nbsp;</a></span>pow() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::pow </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Raise all components to the given power </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the power to which to raise this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a1ca861dd2ea247f94885776b71321a5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ca861dd2ea247f94885776b71321a5a">&#9670;&nbsp;</a></span>pow() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::pow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Raise all components to the given power vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the set of power to which to raise this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a5969272e8f11b1844dbe051d32855255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5969272e8f11b1844dbe051d32855255">&#9670;&nbsp;</a></span>setCoord()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setCoord </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for both x and y </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>the new value for x </td></tr>
    <tr><td class="paramname">nY</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a769505baef52b12436e9ea336ddbdd7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a769505baef52b12436e9ea336ddbdd7d">&#9670;&nbsp;</a></span>setH()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setH </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>h</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Y setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">h</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac18d18ff1fe2c6231b7c9721972fc748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac18d18ff1fe2c6231b7c9721972fc748">&#9670;&nbsp;</a></span>setSize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setSize </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for both x and y </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>the new value for x </td></tr>
    <tr><td class="paramname">h</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab5b1b01769cefbdd771f3e43c411ecda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5b1b01769cefbdd771f3e43c411ecda">&#9670;&nbsp;</a></span>setW()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setW </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>w</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>X setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>the new value for x </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2ccf2960e862f29ecb8f7376446ed549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ccf2960e862f29ecb8f7376446ed549">&#9670;&nbsp;</a></span>setX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setX </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>X setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>the new value for x </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adabcceaaaa83104c3d7a1d4dbe2b77e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adabcceaaaa83104c3d7a1d4dbe2b77e6">&#9670;&nbsp;</a></span>setY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::setY </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nY</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Y setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nY</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aac4f065905420acf119e79b020d61c5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac4f065905420acf119e79b020d61c5c">&#9670;&nbsp;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Utility::String <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the vector into a string </p><dl class="section return"><dt>Returns</dt><dd>the converted vector </dd></dl>

</div>
</div>
<a id="a75d53f546ab349d9d4f2894ca2e2c449"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75d53f546ab349d9d4f2894ca2e2c449">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const T* <a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt; T &gt;::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a pointer to the vector's data </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Matrix/3D/<a class="el" href="_n_r_e___matrix3x3_8hpp_source.php">NRE_Matrix3x3.hpp</a></li>
<li>C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Vector/2D/<a class="el" href="_n_r_e___vector2_d_8hpp_source.php">NRE_Vector2D.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
