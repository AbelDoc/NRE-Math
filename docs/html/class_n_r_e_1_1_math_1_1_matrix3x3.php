<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.15"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: NRE::Math::Matrix3x3&lt; T &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Math</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_math_1_1_matrix3x3-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Math::Matrix3x3&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>3x3 generic matrix  
 <a href="class_n_r_e_1_1_math_1_1_matrix3x3.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___matrix3x3_8hpp_source.php">NRE_Matrix3x3.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NRE::Math::Matrix3x3&lt; T &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_math_1_1_matrix3x3.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3415222b5d55e3e5e3ba3f1f99557c7b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a3415222b5d55e3e5e3ba3f1f99557c7b">Matrix3x3</a> ()=default</td></tr>
<tr class="separator:a3415222b5d55e3e5e3ba3f1f99557c7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add53c1fcf0e54a4fd91284f31fb815a6"><td class="memTemplParams" colspan="2">template&lt;class A , class B , class C , class D , class E , class F , class G , class H , class I &gt; </td></tr>
<tr class="memitem:add53c1fcf0e54a4fd91284f31fb815a6"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#add53c1fcf0e54a4fd91284f31fb815a6">Matrix3x3</a> (A a, B b, C c, D d, E e, F f, G g, H h, I i)</td></tr>
<tr class="separator:add53c1fcf0e54a4fd91284f31fb815a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2e71e2e53d5fbf716023b3d70a9f104"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab2e71e2e53d5fbf716023b3d70a9f104"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ab2e71e2e53d5fbf716023b3d70a9f104">Matrix3x3</a> (K <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a1f7eda0a66228a8f3823e9c07ddc6c8c">value</a>)</td></tr>
<tr class="separator:ab2e71e2e53d5fbf716023b3d70a9f104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab85e33aec84eb6e13326451468b7b863"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N &gt; </td></tr>
<tr class="memitem:ab85e33aec84eb6e13326451468b7b863"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ab85e33aec84eb6e13326451468b7b863">Matrix3x3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;l1, <a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; L &gt; const &amp;l2, <a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; N &gt; const &amp;l3)</td></tr>
<tr class="separator:ab85e33aec84eb6e13326451468b7b863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad961cc00cdbb291844a063e70c3802"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aaad961cc00cdbb291844a063e70c3802">Matrix3x3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> const &amp;m)=default</td></tr>
<tr class="separator:aaad961cc00cdbb291844a063e70c3802"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa47572b5d1ae9e835e8a10f75cc70201"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aa47572b5d1ae9e835e8a10f75cc70201">Matrix3x3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&amp;m)=default</td></tr>
<tr class="separator:aa47572b5d1ae9e835e8a10f75cc70201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded7bc14541a74bcedbf777c5e0b2e7e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aded7bc14541a74bcedbf777c5e0b2e7e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aded7bc14541a74bcedbf777c5e0b2e7e">Matrix3x3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:aded7bc14541a74bcedbf777c5e0b2e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ba520e8633744e2c0f1ced4bfecdad7"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9ba520e8633744e2c0f1ced4bfecdad7"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a9ba520e8633744e2c0f1ced4bfecdad7">Matrix3x3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix4x4.php">Matrix4x4</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:a9ba520e8633744e2c0f1ced4bfecdad7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b3a282bf93dca9900b95d387875133"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ad1b3a282bf93dca9900b95d387875133">~Matrix3x3</a> ()=default</td></tr>
<tr class="separator:ad1b3a282bf93dca9900b95d387875133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8787c70fe4bc88ea3c724dfd4371a9fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt; const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a8787c70fe4bc88ea3c724dfd4371a9fd">getL1</a> () const</td></tr>
<tr class="separator:a8787c70fe4bc88ea3c724dfd4371a9fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7f211677d07fd729e43a49f0642ad6e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt; const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ad7f211677d07fd729e43a49f0642ad6e">getL2</a> () const</td></tr>
<tr class="separator:ad7f211677d07fd729e43a49f0642ad6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a7ba22229135116e93c16f6dffe56b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt; const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a58a7ba22229135116e93c16f6dffe56b">getL3</a> () const</td></tr>
<tr class="separator:a58a7ba22229135116e93c16f6dffe56b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1e1d419b4470dc9cc53c97272bcd8bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ae1e1d419b4470dc9cc53c97272bcd8bc">getC1</a> () const</td></tr>
<tr class="separator:ae1e1d419b4470dc9cc53c97272bcd8bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e4ad2399fd35b5253ab045906e2f807"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a7e4ad2399fd35b5253ab045906e2f807">getC2</a> () const</td></tr>
<tr class="separator:a7e4ad2399fd35b5253ab045906e2f807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a8311bc060b977ee2b20df734ff7d0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a1a8311bc060b977ee2b20df734ff7d0b">getC3</a> () const</td></tr>
<tr class="separator:a1a8311bc060b977ee2b20df734ff7d0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb112c0b85de6a5140a507f901b1f70d"><td class="memItemLeft" align="right" valign="top">long double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#abb112c0b85de6a5140a507f901b1f70d">getDeterminant</a> () const</td></tr>
<tr class="separator:abb112c0b85de6a5140a507f901b1f70d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f39ab8bc99accbb704ff5515c59624e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8f39ab8bc99accbb704ff5515c59624e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a8f39ab8bc99accbb704ff5515c59624e">setL1</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;l1)</td></tr>
<tr class="separator:a8f39ab8bc99accbb704ff5515c59624e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b48fd548fabee8887258603ba22867"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a22b48fd548fabee8887258603ba22867"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a22b48fd548fabee8887258603ba22867">setL2</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;l2)</td></tr>
<tr class="separator:a22b48fd548fabee8887258603ba22867"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f2864c4b7c623b637161158ae7f7516"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9f2864c4b7c623b637161158ae7f7516"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a9f2864c4b7c623b637161158ae7f7516">setL3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;l3)</td></tr>
<tr class="separator:a9f2864c4b7c623b637161158ae7f7516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5042af0b72fd867e36d077a5741890e"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aa5042af0b72fd867e36d077a5741890e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aa5042af0b72fd867e36d077a5741890e">setC1</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;c1)</td></tr>
<tr class="separator:aa5042af0b72fd867e36d077a5741890e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82765763658001fa7228c3e0b808c9ba"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a82765763658001fa7228c3e0b808c9ba"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a82765763658001fa7228c3e0b808c9ba">setC2</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;c2)</td></tr>
<tr class="separator:a82765763658001fa7228c3e0b808c9ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4776b53a54a077f3342ea4e0e2011b3"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad4776b53a54a077f3342ea4e0e2011b3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ad4776b53a54a077f3342ea4e0e2011b3">setC3</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;c3)</td></tr>
<tr class="separator:ad4776b53a54a077f3342ea4e0e2011b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a538aee7efd1c51a801f8f27dfc1efaa7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a538aee7efd1c51a801f8f27dfc1efaa7">setIdentity</a> ()</td></tr>
<tr class="separator:a538aee7efd1c51a801f8f27dfc1efaa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81bcd3c4f3bd75ce1fc34ef658ece0a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a81bcd3c4f3bd75ce1fc34ef658ece0a4">transpose</a> ()</td></tr>
<tr class="separator:a81bcd3c4f3bd75ce1fc34ef658ece0a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3feeded178229bf06c7ae17db9e458fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a3feeded178229bf06c7ae17db9e458fc">inverse</a> ()</td></tr>
<tr class="separator:a3feeded178229bf06c7ae17db9e458fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1cd2fa45f97f8906598dff75d156aab"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ae1cd2fa45f97f8906598dff75d156aab"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ae1cd2fa45f97f8906598dff75d156aab">translate</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:ae1cd2fa45f97f8906598dff75d156aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a507ae912f675d3c6a8b88d987ed468fe"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a507ae912f675d3c6a8b88d987ed468fe"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a507ae912f675d3c6a8b88d987ed468fe">scale</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a507ae912f675d3c6a8b88d987ed468fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0e2fda083093b94f9fb0d16e50d36d3"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab0e2fda083093b94f9fb0d16e50d36d3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ab0e2fda083093b94f9fb0d16e50d36d3">stretchX</a> (K u)</td></tr>
<tr class="separator:ab0e2fda083093b94f9fb0d16e50d36d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9e27e13e85006301b16f754da5372ad"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab9e27e13e85006301b16f754da5372ad"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ab9e27e13e85006301b16f754da5372ad">stretchY</a> (K u)</td></tr>
<tr class="separator:ab9e27e13e85006301b16f754da5372ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a681ca632b3f17880831347c64275411f"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a681ca632b3f17880831347c64275411f"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a681ca632b3f17880831347c64275411f">squeezeX</a> (K u)</td></tr>
<tr class="separator:a681ca632b3f17880831347c64275411f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c76326ce4edfd2b3b51a4ece20857df"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9c76326ce4edfd2b3b51a4ece20857df"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a9c76326ce4edfd2b3b51a4ece20857df">squeezeY</a> (K u)</td></tr>
<tr class="separator:a9c76326ce4edfd2b3b51a4ece20857df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa4a6dfb58015ac492fc03e3da2c3ea"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5fa4a6dfb58015ac492fc03e3da2c3ea"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a5fa4a6dfb58015ac492fc03e3da2c3ea">shearX</a> (K u)</td></tr>
<tr class="separator:a5fa4a6dfb58015ac492fc03e3da2c3ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48134c56e97e83e1c80e9e4fbe71eec3"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a48134c56e97e83e1c80e9e4fbe71eec3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a48134c56e97e83e1c80e9e4fbe71eec3">shearY</a> (K u)</td></tr>
<tr class="separator:a48134c56e97e83e1c80e9e4fbe71eec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8bb28aa20327c854e390d2aad23847"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aaa8bb28aa20327c854e390d2aad23847">rotate</a> (Angle angle)</td></tr>
<tr class="separator:aaa8bb28aa20327c854e390d2aad23847"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f7eda0a66228a8f3823e9c07ddc6c8c"><td class="memItemLeft" align="right" valign="top">const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a1f7eda0a66228a8f3823e9c07ddc6c8c">value</a> () const</td></tr>
<tr class="separator:a1f7eda0a66228a8f3823e9c07ddc6c8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf1f99d9952a2bf9eaefec9f93325c68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#acf1f99d9952a2bf9eaefec9f93325c68">operator []</a> (std::size_t index)</td></tr>
<tr class="separator:acf1f99d9952a2bf9eaefec9f93325c68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45b48bfa1279113c272a2fd8161564c2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; T &gt; const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a45b48bfa1279113c272a2fd8161564c2">operator []</a> (std::size_t index) const</td></tr>
<tr class="separator:a45b48bfa1279113c272a2fd8161564c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1c763215f22622bd6a86aea3e572639"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ae1c763215f22622bd6a86aea3e572639">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> const &amp;m)=default</td></tr>
<tr class="separator:ae1c763215f22622bd6a86aea3e572639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a005a48d111211d78692a252d5b08a9fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a005a48d111211d78692a252d5b08a9fe">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&amp;m)=default</td></tr>
<tr class="separator:a005a48d111211d78692a252d5b08a9fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1c643351093965f875ab7d5785bdc7"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8d1c643351093965f875ab7d5785bdc7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a8d1c643351093965f875ab7d5785bdc7">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:a8d1c643351093965f875ab7d5785bdc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d2a4b7a34d00716739d77f81bb7fe5"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a48d2a4b7a34d00716739d77f81bb7fe5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a48d2a4b7a34d00716739d77f81bb7fe5">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; &amp;&amp;m)</td></tr>
<tr class="separator:a48d2a4b7a34d00716739d77f81bb7fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a163e1da1b3c1c6355732354aaa2c2557"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a163e1da1b3c1c6355732354aaa2c2557"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a163e1da1b3c1c6355732354aaa2c2557">operator+=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:a163e1da1b3c1c6355732354aaa2c2557"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc3ebfa87bdbccffb6284b1c33a1555"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4fc3ebfa87bdbccffb6284b1c33a1555"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a4fc3ebfa87bdbccffb6284b1c33a1555">operator -=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:a4fc3ebfa87bdbccffb6284b1c33a1555"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2f2101194c5fc449484350a2db078af"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aa2f2101194c5fc449484350a2db078af"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#aa2f2101194c5fc449484350a2db078af">operator *=</a> (K k)</td></tr>
<tr class="separator:aa2f2101194c5fc449484350a2db078af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1670ef888ff523625ab0559592577289"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a1670ef888ff523625ab0559592577289"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a1670ef888ff523625ab0559592577289">operator *=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:a1670ef888ff523625ab0559592577289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad54ae5ee1225741d549a2d53194fae19"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad54ae5ee1225741d549a2d53194fae19"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ad54ae5ee1225741d549a2d53194fae19">operator/=</a> (K k)</td></tr>
<tr class="separator:ad54ae5ee1225741d549a2d53194fae19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae76b05a22bb1599c43a2f5164ddf14da"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ae76b05a22bb1599c43a2f5164ddf14da"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ae76b05a22bb1599c43a2f5164ddf14da">operator/=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m)</td></tr>
<tr class="separator:ae76b05a22bb1599c43a2f5164ddf14da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aacaa18227665488887d69b89d66d92"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5aacaa18227665488887d69b89d66d92"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a5aacaa18227665488887d69b89d66d92">operator+</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:a5aacaa18227665488887d69b89d66d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3c59b1f39dfbacc56dc6c605377e77"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9a3c59b1f39dfbacc56dc6c605377e77"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a9a3c59b1f39dfbacc56dc6c605377e77">operator -</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:a9a3c59b1f39dfbacc56dc6c605377e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9308fe800280ee11f4a79baba0e9400"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad9308fe800280ee11f4a79baba0e9400"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ad9308fe800280ee11f4a79baba0e9400">operator *</a> (K k) const</td></tr>
<tr class="separator:ad9308fe800280ee11f4a79baba0e9400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87c5c9c22fc3373dc51a95917a9ed5ed"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a87c5c9c22fc3373dc51a95917a9ed5ed"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a87c5c9c22fc3373dc51a95917a9ed5ed">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:a87c5c9c22fc3373dc51a95917a9ed5ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0020d2b62c67f8430cf298eb77c2c269"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a0020d2b62c67f8430cf298eb77c2c269"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a0020d2b62c67f8430cf298eb77c2c269">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a0020d2b62c67f8430cf298eb77c2c269"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac39385916f08581d0e2788d44bb9cc71"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ac39385916f08581d0e2788d44bb9cc71"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_segment3_d.php">Segment3D</a>&lt; K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ac39385916f08581d0e2788d44bb9cc71">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_segment3_d.php">Segment3D</a>&lt; K &gt; const &amp;s) const</td></tr>
<tr class="separator:ac39385916f08581d0e2788d44bb9cc71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cab3c15a6dd328cf8d099688d1c1887"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_bezier_curve3_d.php">BezierCurve3D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a5cab3c15a6dd328cf8d099688d1c1887">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_bezier_curve3_d.php">BezierCurve3D</a> const &amp;c) const</td></tr>
<tr class="separator:a5cab3c15a6dd328cf8d099688d1c1887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26aaed7904015e73caab2611b40ad795"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a26aaed7904015e73caab2611b40ad795"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a26aaed7904015e73caab2611b40ad795">operator/</a> (K k) const</td></tr>
<tr class="separator:a26aaed7904015e73caab2611b40ad795"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace08ceab781766c3497f0744c6c3672f"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ace08ceab781766c3497f0744c6c3672f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ace08ceab781766c3497f0744c6c3672f">operator/</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:ace08ceab781766c3497f0744c6c3672f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac471a0d527b35b2b1c28c18acbdf0691"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ac471a0d527b35b2b1c28c18acbdf0691"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#ac471a0d527b35b2b1c28c18acbdf0691">operator==</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:ac471a0d527b35b2b1c28c18acbdf0691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a463bdfae3cec53ab4a1168ab3281c513"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a463bdfae3cec53ab4a1168ab3281c513"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a463bdfae3cec53ab4a1168ab3281c513">operator !=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;m) const</td></tr>
<tr class="separator:a463bdfae3cec53ab4a1168ab3281c513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cee4fe8ec40f15aac551246b4b3cb94"><td class="memItemLeft" align="right" valign="top">Utility::String&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php#a7cee4fe8ec40f15aac551246b4b3cb94">toString</a> () const</td></tr>
<tr class="separator:a7cee4fe8ec40f15aac551246b4b3cb94"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class NRE::Math::Matrix3x3&lt; T &gt;</h3>

<p>3x3 generic matrix </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3415222b5d55e3e5e3ba3f1f99557c7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3415222b5d55e3e5e3ba3f1f99557c7b">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[1/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default constructor </p>

</div>
</div>
<a id="add53c1fcf0e54a4fd91284f31fb815a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add53c1fcf0e54a4fd91284f31fb815a6">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[2/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class A , class B , class C , class D , class E , class F , class G , class H , class I &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype">A&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">B&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">C&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">D&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">E&#160;</td>
          <td class="paramname"><em>e</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">F&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">G&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H&#160;</td>
          <td class="paramname"><em>h</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">I&#160;</td>
          <td class="paramname"><em>i</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a matrix with passed values </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>first matrix component </td></tr>
    <tr><td class="paramname">b</td><td>second matrix component </td></tr>
    <tr><td class="paramname">c</td><td>third matrix component </td></tr>
    <tr><td class="paramname">d</td><td>fourth matrix component </td></tr>
    <tr><td class="paramname">e</td><td>fifth matrix component </td></tr>
    <tr><td class="paramname">f</td><td>sixth matrix component </td></tr>
    <tr><td class="paramname">g</td><td>seventh matrix component </td></tr>
    <tr><td class="paramname">h</td><td>eighth matrix component </td></tr>
    <tr><td class="paramname">i</td><td>ninth matrix component </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab2e71e2e53d5fbf716023b3d70a9f104"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2e71e2e53d5fbf716023b3d70a9f104">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[3/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a matrix with a unique value for all component </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>new value for all component </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab85e33aec84eb6e13326451468b7b863"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab85e33aec84eb6e13326451468b7b863">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[4/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; L &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; N &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a matrix with their lines passed in parameters with vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">l1</td><td>the new value for the first line </td></tr>
    <tr><td class="paramname">l2</td><td>the new value for the second line </td></tr>
    <tr><td class="paramname">l3</td><td>the new value for the third line </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aaad961cc00cdbb291844a063e70c3802"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaad961cc00cdbb291844a063e70c3802">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[5/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa47572b5d1ae9e835e8a10f75cc70201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa47572b5d1ae9e835e8a10f75cc70201">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[6/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aded7bc14541a74bcedbf777c5e0b2e7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aded7bc14541a74bcedbf777c5e0b2e7e">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[7/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type matrix into a T-type matrix </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the K-type matrix to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9ba520e8633744e2c0f1ced4bfecdad7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ba520e8633744e2c0f1ced4bfecdad7">&#9670;&nbsp;</a></span>Matrix3x3() <span class="overload">[8/8]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix4x4.php">Matrix4x4</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type 4x4 matrix into a T-type 3x3 matrix </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the K-type 4x4 matrix to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad1b3a282bf93dca9900b95d387875133"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1b3a282bf93dca9900b95d387875133">&#9670;&nbsp;</a></span>~Matrix3x3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::~<a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php" title="3x3 generic matrix">Matrix3x3</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae1e1d419b4470dc9cc53c97272bcd8bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1e1d419b4470dc9cc53c97272bcd8bc">&#9670;&nbsp;</a></span>getC1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getC1 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first column </dd></dl>

</div>
</div>
<a id="a7e4ad2399fd35b5253ab045906e2f807"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e4ad2399fd35b5253ab045906e2f807">&#9670;&nbsp;</a></span>getC2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getC2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the second column </dd></dl>

</div>
</div>
<a id="a1a8311bc060b977ee2b20df734ff7d0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a8311bc060b977ee2b20df734ff7d0b">&#9670;&nbsp;</a></span>getC3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getC3 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the third column </dd></dl>

</div>
</div>
<a id="abb112c0b85de6a5140a507f901b1f70d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb112c0b85de6a5140a507f901b1f70d">&#9670;&nbsp;</a></span>getDeterminant()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">long double <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getDeterminant </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the matrix's determinant </dd></dl>

</div>
</div>
<a id="a8787c70fe4bc88ea3c724dfd4371a9fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8787c70fe4bc88ea3c724dfd4371a9fd">&#9670;&nbsp;</a></span>getL1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getL1 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the first line </dd></dl>

</div>
</div>
<a id="ad7f211677d07fd729e43a49f0642ad6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7f211677d07fd729e43a49f0642ad6e">&#9670;&nbsp;</a></span>getL2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getL2 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the second line </dd></dl>

</div>
</div>
<a id="a58a7ba22229135116e93c16f6dffe56b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58a7ba22229135116e93c16f6dffe56b">&#9670;&nbsp;</a></span>getL3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::getL3 </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the third line </dd></dl>

</div>
</div>
<a id="a3feeded178229bf06c7ae17db9e458fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3feeded178229bf06c7ae17db9e458fc">&#9670;&nbsp;</a></span>inverse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::inverse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inverse the matrix, if not possible the matrix become the identity one </p>

</div>
</div>
<a id="a463bdfae3cec53ab4a1168ab3281c513"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a463bdfae3cec53ab4a1168ab3281c513">&#9670;&nbsp;</a></span>operator !=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator != </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Difference test between this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="ad9308fe800280ee11f4a79baba0e9400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9308fe800280ee11f4a79baba0e9400">&#9670;&nbsp;</a></span>operator *() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the multiplication of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="a87c5c9c22fc3373dc51a95917a9ed5ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87c5c9c22fc3373dc51a95917a9ed5ed">&#9670;&nbsp;</a></span>operator *() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the multiplication of this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to multiply with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="a0020d2b62c67f8430cf298eb77c2c269"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0020d2b62c67f8430cf298eb77c2c269">&#9670;&nbsp;</a></span>operator *() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the transformation of u by this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to transform </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed vector </dd></dl>

</div>
</div>
<a id="ac39385916f08581d0e2788d44bb9cc71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac39385916f08581d0e2788d44bb9cc71">&#9670;&nbsp;</a></span>operator *() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_segment3_d.php">Segment3D</a>&lt;K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_segment3_d.php">Segment3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the segment resulting in the transformation of s by this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the segment to transform </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed vector </dd></dl>

</div>
</div>
<a id="a5cab3c15a6dd328cf8d099688d1c1887"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cab3c15a6dd328cf8d099688d1c1887">&#9670;&nbsp;</a></span>operator *() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_bezier_curve3_d.php">BezierCurve3D</a> <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_bezier_curve3_d.php">BezierCurve3D</a> const &amp;&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the bezier curve resulting in the transformation of c by this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c</td><td>the bezier curve to transform </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed vector </dd></dl>

</div>
</div>
<a id="aa2f2101194c5fc449484350a2db078af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2f2101194c5fc449484350a2db078af">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a1670ef888ff523625ab0559592577289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1670ef888ff523625ab0559592577289">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this with m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to multiply with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a9a3c59b1f39dfbacc56dc6c605377e77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a3c59b1f39dfbacc56dc6c605377e77">&#9670;&nbsp;</a></span>operator -()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the subtraction of this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to subtract with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="a4fc3ebfa87bdbccffb6284b1c33a1555"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc3ebfa87bdbccffb6284b1c33a1555">&#9670;&nbsp;</a></span>operator -=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Subtract m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to subtract into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a id="acf1f99d9952a2bf9eaefec9f93325c68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf1f99d9952a2bf9eaefec9f93325c68">&#9670;&nbsp;</a></span>operator []() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt;&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a reference on a matrix's line </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the line's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the line's reference </dd></dl>

</div>
</div>
<a id="a45b48bfa1279113c272a2fd8161564c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45b48bfa1279113c272a2fd8161564c2">&#9670;&nbsp;</a></span>operator []() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt;T&gt; const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a const reference on a matrix's line </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the line's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the line's reference </dd></dl>

</div>
</div>
<a id="a5aacaa18227665488887d69b89d66d92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5aacaa18227665488887d69b89d66d92">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the addition of this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to add with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="a163e1da1b3c1c6355732354aaa2c2557"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a163e1da1b3c1c6355732354aaa2c2557">&#9670;&nbsp;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to add into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference on himself </dd></dl>

</div>
</div>
<a id="a26aaed7904015e73caab2611b40ad795"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26aaed7904015e73caab2611b40ad795">&#9670;&nbsp;</a></span>operator/() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the division of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="ace08ceab781766c3497f0744c6c3672f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace08ceab781766c3497f0744c6c3672f">&#9670;&nbsp;</a></span>operator/() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the matrix resulting in the division of this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to divide with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the newly computed matrix </dd></dl>

</div>
</div>
<a id="ad54ae5ee1225741d549a2d53194fae19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad54ae5ee1225741d549a2d53194fae19">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ae76b05a22bb1599c43a2f5164ddf14da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae76b05a22bb1599c43a2f5164ddf14da">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this with m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to divide with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ae1c763215f22622bd6a86aea3e572639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1c763215f22622bd6a86aea3e572639">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a005a48d111211d78692a252d5b08a9fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a005a48d111211d78692a252d5b08a9fe">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a8d1c643351093965f875ab7d5785bdc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d1c643351093965f875ab7d5785bdc7">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a48d2a4b7a34d00716739d77f81bb7fe5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48d2a4b7a34d00716739d77f81bb7fe5">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move m into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ac471a0d527b35b2b1c28c18acbdf0691"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac471a0d527b35b2b1c28c18acbdf0691">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">Matrix3x3</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and m </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the matrix to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="aaa8bb28aa20327c854e390d2aad23847"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa8bb28aa20327c854e390d2aad23847">&#9670;&nbsp;</a></span>rotate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::rotate </td>
          <td>(</td>
          <td class="paramtype">Angle&#160;</td>
          <td class="paramname"><em>angle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a rotation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">angle</td><td>the rotation's angle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a507ae912f675d3c6a8b88d987ed468fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a507ae912f675d3c6a8b88d987ed468fe">&#9670;&nbsp;</a></span>scale()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::scale </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a scale </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the scaling vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa5042af0b72fd867e36d077a5741890e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5042af0b72fd867e36d077a5741890e">&#9670;&nbsp;</a></span>setC1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setC1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>c1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>First column setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c1</td><td>the new first column vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a82765763658001fa7228c3e0b808c9ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82765763658001fa7228c3e0b808c9ba">&#9670;&nbsp;</a></span>setC2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setC2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>c2</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Second column setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c2</td><td>the new second column vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad4776b53a54a077f3342ea4e0e2011b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4776b53a54a077f3342ea4e0e2011b3">&#9670;&nbsp;</a></span>setC3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setC3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>c3</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Third column setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c3</td><td>the new third column vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a538aee7efd1c51a801f8f27dfc1efaa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a538aee7efd1c51a801f8f27dfc1efaa7">&#9670;&nbsp;</a></span>setIdentity()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setIdentity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the matrix to the identity matrix </p>

</div>
</div>
<a id="a8f39ab8bc99accbb704ff5515c59624e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f39ab8bc99accbb704ff5515c59624e">&#9670;&nbsp;</a></span>setL1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setL1 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>First line setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">l1</td><td>the new first line vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a22b48fd548fabee8887258603ba22867"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b48fd548fabee8887258603ba22867">&#9670;&nbsp;</a></span>setL2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setL2 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l2</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Second line setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">l2</td><td>the new second line vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9f2864c4b7c623b637161158ae7f7516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f2864c4b7c623b637161158ae7f7516">&#9670;&nbsp;</a></span>setL3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::setL3 </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>l3</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Third line setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">l3</td><td>the new third line vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5fa4a6dfb58015ac492fc03e3da2c3ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fa4a6dfb58015ac492fc03e3da2c3ea">&#9670;&nbsp;</a></span>shearX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::shearX </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a shear on the X axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the shear factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a48134c56e97e83e1c80e9e4fbe71eec3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48134c56e97e83e1c80e9e4fbe71eec3">&#9670;&nbsp;</a></span>shearY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::shearY </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a shear on the Y axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the shear factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a681ca632b3f17880831347c64275411f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a681ca632b3f17880831347c64275411f">&#9670;&nbsp;</a></span>squeezeX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::squeezeX </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a squeeze on the X axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the squeeze factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9c76326ce4edfd2b3b51a4ece20857df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c76326ce4edfd2b3b51a4ece20857df">&#9670;&nbsp;</a></span>squeezeY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::squeezeY </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a squeeze on the Y axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the squeeze factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab0e2fda083093b94f9fb0d16e50d36d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0e2fda083093b94f9fb0d16e50d36d3">&#9670;&nbsp;</a></span>stretchX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::stretchX </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a stretch on the X axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the stretch factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab9e27e13e85006301b16f754da5372ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9e27e13e85006301b16f754da5372ad">&#9670;&nbsp;</a></span>stretchY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::stretchY </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a stretch on the Y axis </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the stretch factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7cee4fe8ec40f15aac551246b4b3cb94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cee4fe8ec40f15aac551246b4b3cb94">&#9670;&nbsp;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Utility::String <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the matrix into a string </p><dl class="section return"><dt>Returns</dt><dd>the converted matrix </dd></dl>

</div>
</div>
<a id="ae1cd2fa45f97f8906598dff75d156aab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1cd2fa45f97f8906598dff75d156aab">&#9670;&nbsp;</a></span>translate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::translate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a translation </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the translation vector </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a81bcd3c4f3bd75ce1fc34ef658ece0a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81bcd3c4f3bd75ce1fc34ef658ece0a4">&#9670;&nbsp;</a></span>transpose()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::transpose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Transpose the matrix </p>

</div>
</div>
<a id="a1f7eda0a66228a8f3823e9c07ddc6c8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f7eda0a66228a8f3823e9c07ddc6c8c">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const T* <a class="el" href="class_n_r_e_1_1_math_1_1_matrix3x3.php">NRE::Math::Matrix3x3</a>&lt; T &gt;::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a pointer to the vector's data </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Matrix/3D/<a class="el" href="_n_r_e___matrix3x3_8hpp_source.php">NRE_Matrix3x3.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
