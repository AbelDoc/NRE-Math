<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.15"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Vector/2D/NRE_Vector2D.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_3813464283bee2267f39dcf080a84d74.php">Math</a></li><li class="navelem"><a class="el" href="dir_4005e686f12f80d4c04432a698da12f8.php">Vector</a></li><li class="navelem"><a class="el" href="dir_297243e99995d447ae342dcea0dbde2d.php">2D</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_Vector2D.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_r_e___vector2_d_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">    #pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">    #include &lt;Utility/String/NRE_String.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">    #include &lt;Utility/Interfaces/Stringable/NRE_Stringable.hpp&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">    #include &quot;../../NRE_Math.hpp&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">    #include &lt;cassert&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keyword">namespace </span><a class="code" href="namespace_math.php">Math</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector3D;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector4D;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keyword">class </span>Vector2D : <span class="keyword">public</span> Utility::Stringable&lt;Vector2D&lt;T&gt;&gt; {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                private :   <span class="comment">// Fields</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    T x;    </div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                    T y;    </div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                public :    <span class="comment">// Methods</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="comment">//## Constructor ##//</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L&gt;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(K nX, L nY);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(K <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a75d53f546ab349d9d4f2894ca2e2c449">value</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(std::initializer_list&lt;T&gt; list);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <span class="comment">//## Copy-Constructor ##//</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="comment">//## Move-Constructor ##//</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="comment">//## Convertor ##//</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>(Vector4D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <span class="comment">//## Deconstructor ##//</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aeb663aece6c51298c9da392e8d338474">~Vector2D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    <span class="comment">//## Getter ##//</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span>                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a61896a30a0012d4dda16dee15e78a1d0">getX</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2a9d3b53dcd9c891a2ce462ff0f79770">getY</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a67afe02f4b0dceaf1ef2f708d3459d5f">getW</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a431744856eb2b6798369e1eb7b2a9715">getH</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    <span class="comment">//## Setter ##//</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2ccf2960e862f29ecb8f7376446ed549">setX</a>(K nX);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#adabcceaaaa83104c3d7a1d4dbe2b77e6">setY</a>(K nY);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab5b1b01769cefbdd771f3e43c411ecda">setW</a>(K w);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a769505baef52b12436e9ea336ddbdd7d">setH</a>(K h);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L&gt;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5969272e8f11b1844dbe051d32855255">setCoord</a>(K nX, L nY);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L&gt;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ac18d18ff1fe2c6231b7c9721972fc748">setSize</a>(K w, L h);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                    <span class="comment">//## Methods ##//</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment"></span>                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2b392c0304271cb5448e7714bcf1b848">norm</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aae8ecfa1d49cbdb524aebc45ffd999f3">normSquared</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa35bc61b9f3a3bb58898d3c0eb77b1d0">distance</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a88beefc5f4fe6b2d6f22df0488b741f7">distanceSquared</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a21b03c6f25466279eaed82addf1b9e76">normalize</a>();</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9cc9306e2ebef16c9752f4495444cc87">limit</a>(K max);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab475aefbb7bd6a669a177aecdcd48b89">pow</a>(K p);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab475aefbb7bd6a669a177aecdcd48b89">pow</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        <span class="keyword">const</span> T* <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a75d53f546ab349d9d4f2894ca2e2c449">value</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    <span class="comment">//## Access Operator ##//</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment"></span>                        T&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a026b4e8d3ba98577886e41cf3674a83a">operator []</a>(std::size_t index);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                        T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a026b4e8d3ba98577886e41cf3674a83a">operator []</a>(std::size_t index) <span class="keyword">const</span>;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    <span class="comment">//## Assignment Operator ##//</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">operator =</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">operator =</a>(Vector2D&lt;K&gt; &amp;&amp; u);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    <span class="comment">//## Shortcut Operator ##//</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#acac64d98f1d95bd16e5ed5ae02754283">operator +=</a>(K k);</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#acac64d98f1d95bd16e5ed5ae02754283">operator +=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a60079a1c5c3264f39db744bf0ef6e4b5">operator -=</a>(K k);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a60079a1c5c3264f39db744bf0ef6e4b5">operator -=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a46a7efc184b850cd9093c5abb2336702">operator *=</a>(K k);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a46a7efc184b850cd9093c5abb2336702">operator *=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abdfbe163dee1d5fe2dffc25d7b6ed40d">operator /=</a>(K k);</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abdfbe163dee1d5fe2dffc25d7b6ed40d">operator /=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4b9cb23d1d592506dca6065ece2a141a">operator |=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                    <span class="comment">//## Arithmetic Operator ##//</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a6e6c49e71e7acb72b0b8413d05924eab">operator +</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a6e6c49e71e7acb72b0b8413d05924eab">operator +</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa68351ab724ceca790240e78834e4dfb">operator -</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa68351ab724ceca790240e78834e4dfb">operator -</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">Vector2D</a> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa68351ab724ceca790240e78834e4dfb">operator -</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abf2949669220e723edf84198ae032acc">operator *</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#abf2949669220e723edf84198ae032acc">operator *</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5e808cb8e5f17b19e3920eec6e36ea3c">operator /</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                        Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5e808cb8e5f17b19e3920eec6e36ea3c">operator /</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9e95a7ac6f8a5ee3492fef7f3515a014">operator |</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                    <span class="comment">//## Comparison Operator ##//</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2348adf636168e4eb09562f2b9cb658e">operator ==</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1eed1f3bde6f3657549d7bbf3cda2854">operator !=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4636215ba01fc6796533331a21e08c1b">operator &lt;</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4d5c377685b942c669c1988ffff4aae2">operator &gt;</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#afd17be72091a5669c96aca3e24d14f5b">operator &lt;=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1951ea9da1f75bb58712dba335c1e84d">operator &gt;=</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                    <span class="comment">//## Stream Operator ##//</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment"></span>                        Utility::String <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php#aac4f065905420acf119e79b020d61c5c">toString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            };</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    </div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            template &lt;class T, class K, typename = std::enable_if_t&lt;std::is_arithmetic&lt;K&gt;::value&gt;&gt;</div><div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="_n_r_e___vector2_d_8hpp.php#a3e7666ed7bedd7f99c0d3211ec3a2a2f">  453</a></span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="_n_r_e___unit_8hpp.php#a9210266e9063867d6de43430c9610c10">operator *</a>(K k, <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u) {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <span class="keywordflow">return</span> u * k;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            }</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            Vector2D&lt;T&gt; normalize(Vector2D&lt;T&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; pow(Vector2D&lt;T&gt; <span class="keyword">const</span>&amp; u, K k);</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; pow(Vector2D&lt;T&gt; <span class="keyword">const</span>&amp; u, Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            template &lt;class T, class K, typename = std::enable_if_t&lt;std::is_arithmetic&lt;K&gt;::value&gt;&gt;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            Vector2D&lt;std::common_type_t&lt;T, K&gt;&gt; reflect(Vector2D&lt;T&gt; <span class="keyword">const</span>&amp; u, Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; n);</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            <span class="keyword">using</span> Point2D = Vector2D&lt;T&gt;;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        }</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    }</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespacestd.php">std</a> {</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="structstd_1_1common__type_3_01_n_r_e_1_1_math_1_1_vector2_d_3_01_t_01_4_00_01_n_r_e_1_1_math_1_1_vector2_d_3_01_k_01_4_01_4.php">  499</a></span>&#160;        <span class="keyword">struct </span>common_type&lt;<a class="code" href="namespace_n_r_e.php">NRE</a>::Math::Vector2D&lt;T&gt;, <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a>&lt;K&gt;&gt; {</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">type</a> = <a class="code" href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D&lt;common_type_t&lt;T, K&gt;</a>&gt;;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        };</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    }</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="preprocessor">    #include &quot;NRE_Vector2D.tpp&quot;</span></div><div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php">NRE::Math::Vector2D</a></div><div class="ttdoc">A cartesian 2D vector.</div><div class="ttdef"><b>Definition:</b> NRE_Matrix3x3.hpp:32</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_acac64d98f1d95bd16e5ed5ae02754283"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#acac64d98f1d95bd16e5ed5ae02754283">NRE::Math::Vector2D::operator+=</a></div><div class="ttdeci">Vector2D &amp; operator+=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a6e6c49e71e7acb72b0b8413d05924eab"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a6e6c49e71e7acb72b0b8413d05924eab">NRE::Math::Vector2D::operator+</a></div><div class="ttdeci">Vector2D&lt; std::common_type_t&lt; T, K &gt; &gt; operator+(K k) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a769505baef52b12436e9ea336ddbdd7d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a769505baef52b12436e9ea336ddbdd7d">NRE::Math::Vector2D::setH</a></div><div class="ttdeci">void setH(K h)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_abdfbe163dee1d5fe2dffc25d7b6ed40d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#abdfbe163dee1d5fe2dffc25d7b6ed40d">NRE::Math::Vector2D::operator/=</a></div><div class="ttdeci">Vector2D &amp; operator/=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a5969272e8f11b1844dbe051d32855255"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5969272e8f11b1844dbe051d32855255">NRE::Math::Vector2D::setCoord</a></div><div class="ttdeci">void setCoord(K nX, L nY)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a60079a1c5c3264f39db744bf0ef6e4b5"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a60079a1c5c3264f39db744bf0ef6e4b5">NRE::Math::Vector2D::operator -=</a></div><div class="ttdeci">Vector2D &amp; operator -=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_ac18d18ff1fe2c6231b7c9721972fc748"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#ac18d18ff1fe2c6231b7c9721972fc748">NRE::Math::Vector2D::setSize</a></div><div class="ttdeci">void setSize(K w, L h)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_ab5b1b01769cefbdd771f3e43c411ecda"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab5b1b01769cefbdd771f3e43c411ecda">NRE::Math::Vector2D::setW</a></div><div class="ttdeci">void setW(K w)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a75d53f546ab349d9d4f2894ca2e2c449"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a75d53f546ab349d9d4f2894ca2e2c449">NRE::Math::Vector2D::value</a></div><div class="ttdeci">const T * value() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_af4dd5359297e9e638980faf8b0a86fec"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#af4dd5359297e9e638980faf8b0a86fec">NRE::Math::Vector2D::operator=</a></div><div class="ttdeci">Vector2D &amp; operator=(Vector2D const &amp;u)=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_aeb663aece6c51298c9da392e8d338474"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#aeb663aece6c51298c9da392e8d338474">NRE::Math::Vector2D::~Vector2D</a></div><div class="ttdeci">~Vector2D()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_aac4f065905420acf119e79b020d61c5c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#aac4f065905420acf119e79b020d61c5c">NRE::Math::Vector2D::toString</a></div><div class="ttdeci">Utility::String toString() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a61896a30a0012d4dda16dee15e78a1d0"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a61896a30a0012d4dda16dee15e78a1d0">NRE::Math::Vector2D::getX</a></div><div class="ttdeci">T getX() const</div></div>
<div class="ttc" id="namespace_math_php"><div class="ttname"><a href="namespace_math.php">Math</a></div><div class="ttdoc">Math's API.</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a595aec6f7e7525985ab18cb582ef7c13"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a595aec6f7e7525985ab18cb582ef7c13">NRE::Math::Vector2D::Vector2D</a></div><div class="ttdeci">Vector2D()=default</div></div>
<div class="ttc" id="_n_r_e___unit_8hpp_php_a9210266e9063867d6de43430c9610c10"><div class="ttname"><a href="_n_r_e___unit_8hpp.php#a9210266e9063867d6de43430c9610c10">NRE::Math::operator *</a></div><div class="ttdeci">constexpr Unit&lt; std::ratio_add&lt; M, M2 &gt;, std::ratio_add&lt; L, L2 &gt;, std::ratio_add&lt; T, T2 &gt;, std::ratio_add&lt; A, A2 &gt; &gt; operator *(Unit&lt; M, L, T, A &gt; const &amp;u1, Unit&lt; M2, L2, T2, A2 &gt; const &amp;u2)</div><div class="ttdef"><b>Definition:</b> NRE_Unit.hpp:237</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_ab475aefbb7bd6a669a177aecdcd48b89"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#ab475aefbb7bd6a669a177aecdcd48b89">NRE::Math::Vector2D::pow</a></div><div class="ttdeci">Vector2D &amp; pow(K p)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a5e808cb8e5f17b19e3920eec6e36ea3c"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a5e808cb8e5f17b19e3920eec6e36ea3c">NRE::Math::Vector2D::operator/</a></div><div class="ttdeci">Vector2D&lt; std::common_type_t&lt; T, K &gt; &gt; operator/(K k) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_aa68351ab724ceca790240e78834e4dfb"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa68351ab724ceca790240e78834e4dfb">NRE::Math::Vector2D::operator -</a></div><div class="ttdeci">Vector2D operator -() const</div></div>
<div class="ttc" id="namespacestd_php"><div class="ttname"><a href="namespacestd.php">std</a></div><div class="ttdoc">The stl standard namespace.</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_abf2949669220e723edf84198ae032acc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#abf2949669220e723edf84198ae032acc">NRE::Math::Vector2D::operator *</a></div><div class="ttdeci">Vector2D&lt; std::common_type_t&lt; T, K &gt; &gt; operator *(K k) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a2a9d3b53dcd9c891a2ce462ff0f79770"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2a9d3b53dcd9c891a2ce462ff0f79770">NRE::Math::Vector2D::getY</a></div><div class="ttdeci">T getY() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a2b392c0304271cb5448e7714bcf1b848"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2b392c0304271cb5448e7714bcf1b848">NRE::Math::Vector2D::norm</a></div><div class="ttdeci">long double norm() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a67afe02f4b0dceaf1ef2f708d3459d5f"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a67afe02f4b0dceaf1ef2f708d3459d5f">NRE::Math::Vector2D::getW</a></div><div class="ttdeci">T getW() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a2348adf636168e4eb09562f2b9cb658e"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2348adf636168e4eb09562f2b9cb658e">NRE::Math::Vector2D::operator==</a></div><div class="ttdeci">bool operator==(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine's global namespace.</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a21b03c6f25466279eaed82addf1b9e76"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a21b03c6f25466279eaed82addf1b9e76">NRE::Math::Vector2D::normalize</a></div><div class="ttdeci">Vector2D &amp; normalize()</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a4636215ba01fc6796533331a21e08c1b"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4636215ba01fc6796533331a21e08c1b">NRE::Math::Vector2D::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a431744856eb2b6798369e1eb7b2a9715"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a431744856eb2b6798369e1eb7b2a9715">NRE::Math::Vector2D::getH</a></div><div class="ttdeci">T getH() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a2ccf2960e862f29ecb8f7376446ed549"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a2ccf2960e862f29ecb8f7376446ed549">NRE::Math::Vector2D::setX</a></div><div class="ttdeci">void setX(K nX)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a9e95a7ac6f8a5ee3492fef7f3515a014"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9e95a7ac6f8a5ee3492fef7f3515a014">NRE::Math::Vector2D::operator|</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; operator|(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a4d5c377685b942c669c1988ffff4aae2"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4d5c377685b942c669c1988ffff4aae2">NRE::Math::Vector2D::operator &gt;</a></div><div class="ttdeci">bool operator &gt;(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a1951ea9da1f75bb58712dba335c1e84d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1951ea9da1f75bb58712dba335c1e84d">NRE::Math::Vector2D::operator &gt;=</a></div><div class="ttdeci">bool operator &gt;=(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a4b9cb23d1d592506dca6065ece2a141a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a4b9cb23d1d592506dca6065ece2a141a">NRE::Math::Vector2D::operator|=</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; operator|=(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_afd17be72091a5669c96aca3e24d14f5b"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#afd17be72091a5669c96aca3e24d14f5b">NRE::Math::Vector2D::operator&lt;=</a></div><div class="ttdeci">bool operator&lt;=(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a46a7efc184b850cd9093c5abb2336702"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a46a7efc184b850cd9093c5abb2336702">NRE::Math::Vector2D::operator *=</a></div><div class="ttdeci">Vector2D &amp; operator *=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_aae8ecfa1d49cbdb524aebc45ffd999f3"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#aae8ecfa1d49cbdb524aebc45ffd999f3">NRE::Math::Vector2D::normSquared</a></div><div class="ttdeci">T normSquared() const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_aa35bc61b9f3a3bb58898d3c0eb77b1d0"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#aa35bc61b9f3a3bb58898d3c0eb77b1d0">NRE::Math::Vector2D::distance</a></div><div class="ttdeci">long double distance(Vector2D&lt; K &gt; const &amp;v) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_adabcceaaaa83104c3d7a1d4dbe2b77e6"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#adabcceaaaa83104c3d7a1d4dbe2b77e6">NRE::Math::Vector2D::setY</a></div><div class="ttdeci">void setY(K nY)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a88beefc5f4fe6b2d6f22df0488b741f7"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a88beefc5f4fe6b2d6f22df0488b741f7">NRE::Math::Vector2D::distanceSquared</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; distanceSquared(Vector2D&lt; K &gt; const &amp;v) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a9cc9306e2ebef16c9752f4495444cc87"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a9cc9306e2ebef16c9752f4495444cc87">NRE::Math::Vector2D::limit</a></div><div class="ttdeci">void limit(K max)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a1eed1f3bde6f3657549d7bbf3cda2854"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a1eed1f3bde6f3657549d7bbf3cda2854">NRE::Math::Vector2D::operator !=</a></div><div class="ttdeci">bool operator !=(Vector2D&lt; K &gt; const &amp;u) const</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector2_d_php_a026b4e8d3ba98577886e41cf3674a83a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector2_d.php#a026b4e8d3ba98577886e41cf3674a83a">NRE::Math::Vector2D::operator []</a></div><div class="ttdeci">T &amp; operator [](std::size_t index)</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
