<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.15"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: NRE::Math::Vector4D&lt; T &gt; Class Template Reference</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_n_r_e.php">NRE</a></li><li class="navelem"><b>Math</b></li><li class="navelem"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_n_r_e_1_1_math_1_1_vector4_d-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NRE::Math::Vector4D&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A cartesian 4D vector, 3D homogeneous.  
 <a href="class_n_r_e_1_1_math_1_1_vector4_d.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_n_r_e___vector4_d_8hpp_source.php">NRE_Vector4D.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NRE::Math::Vector4D&lt; T &gt;:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_n_r_e_1_1_math_1_1_vector4_d.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5660053e5804bbadf7a3398e4635f59c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a5660053e5804bbadf7a3398e4635f59c">Vector4D</a> ()=default</td></tr>
<tr class="separator:a5660053e5804bbadf7a3398e4635f59c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0edf3bf584632acfd44ab803616058f3"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N , class M &gt; </td></tr>
<tr class="memitem:a0edf3bf584632acfd44ab803616058f3"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a0edf3bf584632acfd44ab803616058f3">Vector4D</a> (K nX, L nY, N nZ, M nW)</td></tr>
<tr class="separator:a0edf3bf584632acfd44ab803616058f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c5ec63a3158e6a6fc11391ab212346"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aa4c5ec63a3158e6a6fc11391ab212346"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa4c5ec63a3158e6a6fc11391ab212346">Vector4D</a> (K <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a76d1abdab3ab29bed36bb42c211bc3be">value</a>)</td></tr>
<tr class="separator:aa4c5ec63a3158e6a6fc11391ab212346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fe34acd332a4e7cb90782a2d2f5f6ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a4fe34acd332a4e7cb90782a2d2f5f6ad">Vector4D</a> (std::initializer_list&lt; T &gt; list)</td></tr>
<tr class="separator:a4fe34acd332a4e7cb90782a2d2f5f6ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d7ce6a19864d39913215a78330c58d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a1d7ce6a19864d39913215a78330c58d1">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> const &amp;u)=default</td></tr>
<tr class="separator:a1d7ce6a19864d39913215a78330c58d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9d790b8975d101ca5232eb4d29112e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ab9d790b8975d101ca5232eb4d29112e0">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&amp;u)=default</td></tr>
<tr class="separator:ab9d790b8975d101ca5232eb4d29112e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d13d8a322f424b8d3f0444d533a427c"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a9d13d8a322f424b8d3f0444d533a427c"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a9d13d8a322f424b8d3f0444d533a427c">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a9d13d8a322f424b8d3f0444d533a427c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f614816b23ecdb6749189f820c8fea"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a05f614816b23ecdb6749189f820c8fea"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a05f614816b23ecdb6749189f820c8fea">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a05f614816b23ecdb6749189f820c8fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5826d911c580ab5b09e3357bd9a58b"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N &gt; </td></tr>
<tr class="memitem:a2b5826d911c580ab5b09e3357bd9a58b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a2b5826d911c580ab5b09e3357bd9a58b">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u, L nZ, N nW)</td></tr>
<tr class="separator:a2b5826d911c580ab5b09e3357bd9a58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aada3f55af33fbd0698386065ff919fb4"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aada3f55af33fbd0698386065ff919fb4"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aada3f55af33fbd0698386065ff919fb4">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:aada3f55af33fbd0698386065ff919fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135e61e944ffaabc1d2713240b2c4964"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:a135e61e944ffaabc1d2713240b2c4964"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a135e61e944ffaabc1d2713240b2c4964">Vector4D</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u, L nW)</td></tr>
<tr class="separator:a135e61e944ffaabc1d2713240b2c4964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138534e23136a793614966f44d132ee8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a138534e23136a793614966f44d132ee8">~Vector4D</a> ()=default</td></tr>
<tr class="separator:a138534e23136a793614966f44d132ee8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace3c6ab1d99767fbc951a1738f1d5a2"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aace3c6ab1d99767fbc951a1738f1d5a2">getX</a> () const</td></tr>
<tr class="separator:aace3c6ab1d99767fbc951a1738f1d5a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7c45abea7da6822542849e1279f4709"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af7c45abea7da6822542849e1279f4709">getY</a> () const</td></tr>
<tr class="separator:af7c45abea7da6822542849e1279f4709"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af81f1f0403ba6855a9df334e9cc178b4"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#af81f1f0403ba6855a9df334e9cc178b4">getZ</a> () const</td></tr>
<tr class="separator:af81f1f0403ba6855a9df334e9cc178b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcec8a1b0453cde4c068f102c1e80d2f"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afcec8a1b0453cde4c068f102c1e80d2f">getW</a> () const</td></tr>
<tr class="separator:afcec8a1b0453cde4c068f102c1e80d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ba7243457f25f7e9742093edeeca695"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a2ba7243457f25f7e9742093edeeca695">getR</a> () const</td></tr>
<tr class="separator:a2ba7243457f25f7e9742093edeeca695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c780170343220e60d8865998351e706"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a7c780170343220e60d8865998351e706">getG</a> () const</td></tr>
<tr class="separator:a7c780170343220e60d8865998351e706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ed772b63afcdf195655692ec8b4b22"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a35ed772b63afcdf195655692ec8b4b22">getB</a> () const</td></tr>
<tr class="separator:a35ed772b63afcdf195655692ec8b4b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01ff0bce20c2665c6b76a9a6d22e47ec"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a01ff0bce20c2665c6b76a9a6d22e47ec">getA</a> () const</td></tr>
<tr class="separator:a01ff0bce20c2665c6b76a9a6d22e47ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38abf4aeb4499f3f151c961b2ab09c39"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a38abf4aeb4499f3f151c961b2ab09c39"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a38abf4aeb4499f3f151c961b2ab09c39">setX</a> (K nX)</td></tr>
<tr class="separator:a38abf4aeb4499f3f151c961b2ab09c39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08fdd67f8e0c93134373602a27f63fd2"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a08fdd67f8e0c93134373602a27f63fd2"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a08fdd67f8e0c93134373602a27f63fd2">setY</a> (K nY)</td></tr>
<tr class="separator:a08fdd67f8e0c93134373602a27f63fd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a558915236fe79877f742037847beeaa8"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a558915236fe79877f742037847beeaa8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a558915236fe79877f742037847beeaa8">setZ</a> (K nZ)</td></tr>
<tr class="separator:a558915236fe79877f742037847beeaa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee882af7eeaef4ff3439fdab6614d7a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5ee882af7eeaef4ff3439fdab6614d7a"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a5ee882af7eeaef4ff3439fdab6614d7a">setW</a> (K nW)</td></tr>
<tr class="separator:a5ee882af7eeaef4ff3439fdab6614d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0248769e7fb453ed853b3ba654659dd"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ad0248769e7fb453ed853b3ba654659dd"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ad0248769e7fb453ed853b3ba654659dd">setR</a> (K r)</td></tr>
<tr class="separator:ad0248769e7fb453ed853b3ba654659dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd70b2171b76b2b238025de821ef439"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aadd70b2171b76b2b238025de821ef439"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aadd70b2171b76b2b238025de821ef439">setG</a> (K g)</td></tr>
<tr class="separator:aadd70b2171b76b2b238025de821ef439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a1604b0987d8415611103cc6b84490"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a39a1604b0987d8415611103cc6b84490"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a39a1604b0987d8415611103cc6b84490">setB</a> (K b)</td></tr>
<tr class="separator:a39a1604b0987d8415611103cc6b84490"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7edc6bf8ca15f7c94f2c78b642a6d684"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a7edc6bf8ca15f7c94f2c78b642a6d684"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a7edc6bf8ca15f7c94f2c78b642a6d684">setA</a> (K a)</td></tr>
<tr class="separator:a7edc6bf8ca15f7c94f2c78b642a6d684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a543e584b39dc45b87a1436b35abb0bf7"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N , class M &gt; </td></tr>
<tr class="memitem:a543e584b39dc45b87a1436b35abb0bf7"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a543e584b39dc45b87a1436b35abb0bf7">setCoord</a> (K nX, L nY, N nZ, M nW)</td></tr>
<tr class="separator:a543e584b39dc45b87a1436b35abb0bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a651e4b28db7197bcb24840702ddd5804"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N &gt; </td></tr>
<tr class="memitem:a651e4b28db7197bcb24840702ddd5804"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a651e4b28db7197bcb24840702ddd5804">setCoord</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;u, L nZ, N nW)</td></tr>
<tr class="separator:a651e4b28db7197bcb24840702ddd5804"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9617a98b750feb2d8401c3f722d485df"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:a9617a98b750feb2d8401c3f722d485df"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a9617a98b750feb2d8401c3f722d485df">setCoord</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u, L nW)</td></tr>
<tr class="separator:a9617a98b750feb2d8401c3f722d485df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c4ba628320136d79cf156a0408450f8"><td class="memTemplParams" colspan="2">template&lt;class K , class L , class N , class M &gt; </td></tr>
<tr class="memitem:a7c4ba628320136d79cf156a0408450f8"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a7c4ba628320136d79cf156a0408450f8">setRGBA</a> (K r, L g, N b, M a)</td></tr>
<tr class="separator:a7c4ba628320136d79cf156a0408450f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afea9356e86a055b22aa8c2ab21290bb2"><td class="memTemplParams" colspan="2">template&lt;class K , class L &gt; </td></tr>
<tr class="memitem:afea9356e86a055b22aa8c2ab21290bb2"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afea9356e86a055b22aa8c2ab21290bb2">setRGBA</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;u, L a)</td></tr>
<tr class="separator:afea9356e86a055b22aa8c2ab21290bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a51d7d926bd69c8faad67b373c2d5db"><td class="memItemLeft" align="right" valign="top">long double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a5a51d7d926bd69c8faad67b373c2d5db">norm</a> () const</td></tr>
<tr class="separator:a5a51d7d926bd69c8faad67b373c2d5db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac350ad0444fbd3fb3d7b0662565248bc"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac350ad0444fbd3fb3d7b0662565248bc">normSquared</a> () const</td></tr>
<tr class="separator:ac350ad0444fbd3fb3d7b0662565248bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3190d695c7c1503799510888172a6a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a3d3190d695c7c1503799510888172a6a"><td class="memTemplItemLeft" align="right" valign="top">long double&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a3d3190d695c7c1503799510888172a6a">distance</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;v) const</td></tr>
<tr class="separator:a3d3190d695c7c1503799510888172a6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adac2a3be9d49eee587d2e7abc38033"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a4adac2a3be9d49eee587d2e7abc38033"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a4adac2a3be9d49eee587d2e7abc38033">distanceSquared</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;v) const</td></tr>
<tr class="separator:a4adac2a3be9d49eee587d2e7abc38033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbe956f15f3b7ed2bbb873ef01c23c96"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#adbe956f15f3b7ed2bbb873ef01c23c96">normalize</a> ()</td></tr>
<tr class="separator:adbe956f15f3b7ed2bbb873ef01c23c96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68e4c5d8db9ad6e1058b21baf3b8ab87"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a68e4c5d8db9ad6e1058b21baf3b8ab87"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a68e4c5d8db9ad6e1058b21baf3b8ab87">limit</a> (K max)</td></tr>
<tr class="separator:a68e4c5d8db9ad6e1058b21baf3b8ab87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd05ef00181cf6c3df9f12b49c9eb62b"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:abd05ef00181cf6c3df9f12b49c9eb62b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#abd05ef00181cf6c3df9f12b49c9eb62b">pow</a> (K p)</td></tr>
<tr class="separator:abd05ef00181cf6c3df9f12b49c9eb62b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdd389ba88eef7bd68798068cef11e69"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:acdd389ba88eef7bd68798068cef11e69"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#acdd389ba88eef7bd68798068cef11e69">pow</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;p)</td></tr>
<tr class="separator:acdd389ba88eef7bd68798068cef11e69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d1abdab3ab29bed36bb42c211bc3be"><td class="memItemLeft" align="right" valign="top">const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a76d1abdab3ab29bed36bb42c211bc3be">value</a> () const</td></tr>
<tr class="separator:a76d1abdab3ab29bed36bb42c211bc3be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71daa46a1a52fb090aab5d0a1af951fd"><td class="memItemLeft" align="right" valign="top">T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a71daa46a1a52fb090aab5d0a1af951fd">operator []</a> (std::size_t index)</td></tr>
<tr class="separator:a71daa46a1a52fb090aab5d0a1af951fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a220bf8bbe32105c706146378273202da"><td class="memItemLeft" align="right" valign="top">T const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a220bf8bbe32105c706146378273202da">operator []</a> (std::size_t index) const</td></tr>
<tr class="separator:a220bf8bbe32105c706146378273202da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03f9efec7ea3dda163209b2a7c7ddc9e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a03f9efec7ea3dda163209b2a7c7ddc9e">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> const &amp;u)=default</td></tr>
<tr class="separator:a03f9efec7ea3dda163209b2a7c7ddc9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05921d8cf0d6ab79100e9ba7ca351feb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a05921d8cf0d6ab79100e9ba7ca351feb">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&amp;u)=default</td></tr>
<tr class="separator:a05921d8cf0d6ab79100e9ba7ca351feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bb077690c49adf58f54267f91543b7b"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a7bb077690c49adf58f54267f91543b7b"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a7bb077690c49adf58f54267f91543b7b">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a7bb077690c49adf58f54267f91543b7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff34345bd99500fb89a0a77e3f12b609"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aff34345bd99500fb89a0a77e3f12b609"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aff34345bd99500fb89a0a77e3f12b609">operator=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; &amp;&amp;u)</td></tr>
<tr class="separator:aff34345bd99500fb89a0a77e3f12b609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa40fc443bf77598f83faac93ba11929f"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aa40fc443bf77598f83faac93ba11929f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aa40fc443bf77598f83faac93ba11929f">operator+=</a> (K k)</td></tr>
<tr class="separator:aa40fc443bf77598f83faac93ba11929f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a076439dc95b4f1180ff64e1564f05b40"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a076439dc95b4f1180ff64e1564f05b40"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a076439dc95b4f1180ff64e1564f05b40">operator+=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a076439dc95b4f1180ff64e1564f05b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6fa506a462f9088461d3d6dc1b3b708"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ac6fa506a462f9088461d3d6dc1b3b708"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac6fa506a462f9088461d3d6dc1b3b708">operator -=</a> (K k)</td></tr>
<tr class="separator:ac6fa506a462f9088461d3d6dc1b3b708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b8955a420c7ccb0657436d14c903da"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a90b8955a420c7ccb0657436d14c903da"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a90b8955a420c7ccb0657436d14c903da">operator -=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a90b8955a420c7ccb0657436d14c903da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd542d784fce3b97ca0516ff485805c"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aadd542d784fce3b97ca0516ff485805c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aadd542d784fce3b97ca0516ff485805c">operator *=</a> (K k)</td></tr>
<tr class="separator:aadd542d784fce3b97ca0516ff485805c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada05b630c814e51c0c63c138a3905639"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ada05b630c814e51c0c63c138a3905639"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ada05b630c814e51c0c63c138a3905639">operator *=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:ada05b630c814e51c0c63c138a3905639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52865a646111eaf68e9771a9b84149ce"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a52865a646111eaf68e9771a9b84149ce"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a52865a646111eaf68e9771a9b84149ce">operator/=</a> (K k)</td></tr>
<tr class="separator:a52865a646111eaf68e9771a9b84149ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e023261ec90957f811c1069439728cf"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a2e023261ec90957f811c1069439728cf"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a2e023261ec90957f811c1069439728cf">operator/=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a2e023261ec90957f811c1069439728cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3cf5aad969543b2881bdfc53715527c"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ab3cf5aad969543b2881bdfc53715527c"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ab3cf5aad969543b2881bdfc53715527c">operator|=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:ab3cf5aad969543b2881bdfc53715527c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d925a3d85c8a11e5e360dfb99d42b37"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a3d925a3d85c8a11e5e360dfb99d42b37"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a3d925a3d85c8a11e5e360dfb99d42b37">operator ^=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u)</td></tr>
<tr class="separator:a3d925a3d85c8a11e5e360dfb99d42b37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a460f3a646a44e0dd129280eff215bef8"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a460f3a646a44e0dd129280eff215bef8"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a460f3a646a44e0dd129280eff215bef8">operator+</a> (K k) const</td></tr>
<tr class="separator:a460f3a646a44e0dd129280eff215bef8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d06f761a78055786b725b877af0afb"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a54d06f761a78055786b725b877af0afb"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a54d06f761a78055786b725b877af0afb">operator+</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a54d06f761a78055786b725b877af0afb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae13f582fc435822d6c229d6574174eba"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ae13f582fc435822d6c229d6574174eba"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae13f582fc435822d6c229d6574174eba">operator -</a> (K k) const</td></tr>
<tr class="separator:ae13f582fc435822d6c229d6574174eba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03336d092175b46ab42daa9f558841ae"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a03336d092175b46ab42daa9f558841ae"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a03336d092175b46ab42daa9f558841ae">operator -</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a03336d092175b46ab42daa9f558841ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10eda10a3d8404993464eace5a2fd8c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a10eda10a3d8404993464eace5a2fd8c5">operator -</a> () const</td></tr>
<tr class="separator:a10eda10a3d8404993464eace5a2fd8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc60360c51b82de0096206a11b9e7a2"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:aebc60360c51b82de0096206a11b9e7a2"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#aebc60360c51b82de0096206a11b9e7a2">operator *</a> (K k) const</td></tr>
<tr class="separator:aebc60360c51b82de0096206a11b9e7a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6768a30deef5c256cf0a2ae950fe71d8"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a6768a30deef5c256cf0a2ae950fe71d8"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a6768a30deef5c256cf0a2ae950fe71d8">operator *</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a6768a30deef5c256cf0a2ae950fe71d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac882f95d2a010366bae0a15c85e57515"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ac882f95d2a010366bae0a15c85e57515"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ac882f95d2a010366bae0a15c85e57515">operator/</a> (K k) const</td></tr>
<tr class="separator:ac882f95d2a010366bae0a15c85e57515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e2e111c6a93d72a1e6e38afa7c19337"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8e2e111c6a93d72a1e6e38afa7c19337"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8e2e111c6a93d72a1e6e38afa7c19337">operator/</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a8e2e111c6a93d72a1e6e38afa7c19337"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54ed86b07ede49f2e46f17254c965d2f"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a54ed86b07ede49f2e46f17254c965d2f"><td class="memTemplItemLeft" align="right" valign="top">std::common_type_t&lt; T, K &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a54ed86b07ede49f2e46f17254c965d2f">operator|</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a54ed86b07ede49f2e46f17254c965d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e6cc24af34fbf71ac4c3864ae95037"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a03e6cc24af34fbf71ac4c3864ae95037"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; std::common_type_t&lt; T, K &gt; &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a03e6cc24af34fbf71ac4c3864ae95037">operator ^</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a03e6cc24af34fbf71ac4c3864ae95037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e7d2794212483efaf5163f491711e4a"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a5e7d2794212483efaf5163f491711e4a"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a5e7d2794212483efaf5163f491711e4a">operator==</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a5e7d2794212483efaf5163f491711e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a088f329f841954d5d30fca8d0db2799d"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a088f329f841954d5d30fca8d0db2799d"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a088f329f841954d5d30fca8d0db2799d">operator !=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a088f329f841954d5d30fca8d0db2799d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4ec289b2d1189b313486a9f3c2a7957"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ae4ec289b2d1189b313486a9f3c2a7957"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae4ec289b2d1189b313486a9f3c2a7957">operator&lt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:ae4ec289b2d1189b313486a9f3c2a7957"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f2c7cad206f60ae14e80876d968e9ed"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:a8f2c7cad206f60ae14e80876d968e9ed"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a8f2c7cad206f60ae14e80876d968e9ed">operator &gt;</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:a8f2c7cad206f60ae14e80876d968e9ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0de1f140819e7ba48190f21c8cf7d08"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:ae0de1f140819e7ba48190f21c8cf7d08"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#ae0de1f140819e7ba48190f21c8cf7d08">operator&lt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:ae0de1f140819e7ba48190f21c8cf7d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc447db337b73dddb88e98ca932c8667"><td class="memTemplParams" colspan="2">template&lt;class K &gt; </td></tr>
<tr class="memitem:afc447db337b73dddb88e98ca932c8667"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#afc447db337b73dddb88e98ca932c8667">operator &gt;=</a> (<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;u) const</td></tr>
<tr class="separator:afc447db337b73dddb88e98ca932c8667"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a60b47199873f76c28f7e124585f944"><td class="memItemLeft" align="right" valign="top">Utility::String&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php#a9a60b47199873f76c28f7e124585f944">toString</a> () const</td></tr>
<tr class="separator:a9a60b47199873f76c28f7e124585f944"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class NRE::Math::Vector4D&lt; T &gt;</h3>

<p>A cartesian 4D vector, 3D homogeneous. </p>
<dl class="section warning"><dt>Warning</dt><dd>Use this vector with POD type only </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5660053e5804bbadf7a3398e4635f59c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5660053e5804bbadf7a3398e4635f59c">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[1/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Construct the null vector </p>

</div>
</div>
<a id="a0edf3bf584632acfd44ab803616058f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0edf3bf584632acfd44ab803616058f3">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[2/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N , class M &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">N&#160;</td>
          <td class="paramname"><em>nZ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">M&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector with passed values </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>new x value </td></tr>
    <tr><td class="paramname">nY</td><td>new y value </td></tr>
    <tr><td class="paramname">nZ</td><td>new z value </td></tr>
    <tr><td class="paramname">nW</td><td>new w value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4c5ec63a3158e6a6fc11391ab212346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c5ec63a3158e6a6fc11391ab212346">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[3/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector with an unique value for all coordinates </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>new x, y, z and w values </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4fe34acd332a4e7cb90782a2d2f5f6ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fe34acd332a4e7cb90782a2d2f5f6ad">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[4/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype">std::initializer_list&lt; T &gt;&#160;</td>
          <td class="paramname"><em>list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Construct a vector from an initializer list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">list</td><td>the construction list </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1d7ce6a19864d39913215a78330c58d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d7ce6a19864d39913215a78330c58d1">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[5/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab9d790b8975d101ca5232eb4d29112e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9d790b8975d101ca5232eb4d29112e0">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[6/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9d13d8a322f424b8d3f0444d533a427c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d13d8a322f424b8d3f0444d533a427c">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[7/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a K-type vector into a T-type vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the K-type vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a05f614816b23ecdb6749189f820c8fea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f614816b23ecdb6749189f820c8fea">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[8/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a base 2D vector into a 4D vector with a default z and w value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the 2D vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2b5826d911c580ab5b09e3357bd9a58b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b5826d911c580ab5b09e3357bd9a58b">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[9/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nZ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">N&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a base 2D vector into a 4D vector with a passed z and w value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the 2D vector to convert </td></tr>
    <tr><td class="paramname">nZ</td><td>the new z value </td></tr>
    <tr><td class="paramname">nW</td><td>the new w value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aada3f55af33fbd0698386065ff919fb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aada3f55af33fbd0698386065ff919fb4">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[10/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a base 3D vector into a 4D vector with a default w value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the 4D vector to convert </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a135e61e944ffaabc1d2713240b2c4964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a135e61e944ffaabc1d2713240b2c4964">&#9670;&nbsp;</a></span>Vector4D() <span class="overload">[11/11]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert a base 3D vector into a 4D point with a passed w value </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the 4D vector to convert </td></tr>
    <tr><td class="paramname">nW</td><td>the new w value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a138534e23136a793614966f44d132ee8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a138534e23136a793614966f44d132ee8">&#9670;&nbsp;</a></span>~Vector4D()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::~<a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php" title="A cartesian 4D vector, 3D homogeneous.">Vector4D</a> Deconstructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3d3190d695c7c1503799510888172a6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d3190d695c7c1503799510888172a6a">&#9670;&nbsp;</a></span>distance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">long double <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::distance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the distance to another vector </dd></dl>

</div>
</div>
<a id="a4adac2a3be9d49eee587d2e7abc38033"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4adac2a3be9d49eee587d2e7abc38033">&#9670;&nbsp;</a></span>distanceSquared()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::distanceSquared </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the squared distance to another vector </dd></dl>

</div>
</div>
<a id="a01ff0bce20c2665c6b76a9a6d22e47ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01ff0bce20c2665c6b76a9a6d22e47ec">&#9670;&nbsp;</a></span>getA()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getA </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the w value </dd></dl>

</div>
</div>
<a id="a35ed772b63afcdf195655692ec8b4b22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35ed772b63afcdf195655692ec8b4b22">&#9670;&nbsp;</a></span>getB()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getB </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the z value </dd></dl>

</div>
</div>
<a id="a7c780170343220e60d8865998351e706"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c780170343220e60d8865998351e706">&#9670;&nbsp;</a></span>getG()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getG </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the y value </dd></dl>

</div>
</div>
<a id="a2ba7243457f25f7e9742093edeeca695"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ba7243457f25f7e9742093edeeca695">&#9670;&nbsp;</a></span>getR()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getR </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x value </dd></dl>

</div>
</div>
<a id="afcec8a1b0453cde4c068f102c1e80d2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcec8a1b0453cde4c068f102c1e80d2f">&#9670;&nbsp;</a></span>getW()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getW </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the w value </dd></dl>

</div>
</div>
<a id="aace3c6ab1d99767fbc951a1738f1d5a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace3c6ab1d99767fbc951a1738f1d5a2">&#9670;&nbsp;</a></span>getX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the x value </dd></dl>

</div>
</div>
<a id="af7c45abea7da6822542849e1279f4709"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7c45abea7da6822542849e1279f4709">&#9670;&nbsp;</a></span>getY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the y value </dd></dl>

</div>
</div>
<a id="af81f1f0403ba6855a9df334e9cc178b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af81f1f0403ba6855a9df334e9cc178b4">&#9670;&nbsp;</a></span>getZ()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::getZ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the z value </dd></dl>

</div>
</div>
<a id="a68e4c5d8db9ad6e1058b21baf3b8ab87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68e4c5d8db9ad6e1058b21baf3b8ab87">&#9670;&nbsp;</a></span>limit()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::limit </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Limit the vector value to the given max, if to high then normalize it </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">max</td><td>the maximum value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5a51d7d926bd69c8faad67b373c2d5db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a51d7d926bd69c8faad67b373c2d5db">&#9670;&nbsp;</a></span>norm()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">long double <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::norm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the vector's norm </dd></dl>

</div>
</div>
<a id="adbe956f15f3b7ed2bbb873ef01c23c96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbe956f15f3b7ed2bbb873ef01c23c96">&#9670;&nbsp;</a></span>normalize()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::normalize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Normalize the vector </p><dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ac350ad0444fbd3fb3d7b0662565248bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac350ad0444fbd3fb3d7b0662565248bc">&#9670;&nbsp;</a></span>normSquared()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::normSquared </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the squared vector's norm </dd></dl>

</div>
</div>
<a id="a088f329f841954d5d30fca8d0db2799d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a088f329f841954d5d30fca8d0db2799d">&#9670;&nbsp;</a></span>operator !=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator != </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Difference test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="aebc60360c51b82de0096206a11b9e7a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebc60360c51b82de0096206a11b9e7a2">&#9670;&nbsp;</a></span>operator *() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the multiplication of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a6768a30deef5c256cf0a2ae950fe71d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6768a30deef5c256cf0a2ae950fe71d8">&#9670;&nbsp;</a></span>operator *() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the multiplication of this by u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the multiplication vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="aadd542d784fce3b97ca0516ff485805c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadd542d784fce3b97ca0516ff485805c">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this by a factor k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the multiplication factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ada05b630c814e51c0c63c138a3905639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada05b630c814e51c0c63c138a3905639">&#9670;&nbsp;</a></span>operator *=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Multiply this by a vector u, component by component </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the multiplication vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ae13f582fc435822d6c229d6574174eba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae13f582fc435822d6c229d6574174eba">&#9670;&nbsp;</a></span>operator -() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the subtraction of k into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a03336d092175b46ab42daa9f558841ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03336d092175b46ab42daa9f558841ae">&#9670;&nbsp;</a></span>operator -() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the subtraction of u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to subtract </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a10eda10a3d8404993464eace5a2fd8c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10eda10a3d8404993464eace5a2fd8c5">&#9670;&nbsp;</a></span>operator -() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a> <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator - </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the opposite version of this </p><dl class="section return"><dt>Returns</dt><dd>the opposite vector </dd></dl>

</div>
</div>
<a id="ac6fa506a462f9088461d3d6dc1b3b708"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6fa506a462f9088461d3d6dc1b3b708">&#9670;&nbsp;</a></span>operator -=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Subtract a scalar to all components </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a90b8955a420c7ccb0657436d14c903da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b8955a420c7ccb0657436d14c903da">&#9670;&nbsp;</a></span>operator -=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Subtract a vector into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to subtract into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a8f2c7cad206f60ae14e80876d968e9ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f2c7cad206f60ae14e80876d968e9ed">&#9670;&nbsp;</a></span>operator &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator &gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="afc447db337b73dddb88e98ca932c8667"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc447db337b73dddb88e98ca932c8667">&#9670;&nbsp;</a></span>operator &gt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator &gt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Superior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a71daa46a1a52fb090aab5d0a1af951fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71daa46a1a52fb090aab5d0a1af951fd">&#9670;&nbsp;</a></span>operator []() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a reference on a vector's object </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the object's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's reference </dd></dl>

</div>
</div>
<a id="a220bf8bbe32105c706146378273202da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a220bf8bbe32105c706146378273202da">&#9670;&nbsp;</a></span>operator []() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T const&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator [] </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a const reference on a vector's object </p><dl class="section warning"><dt>Warning</dt><dd>No range check performed </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the object's index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the object's reference </dd></dl>

</div>
</div>
<a id="a03e6cc24af34fbf71ac4c3864ae95037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03e6cc24af34fbf71ac4c3864ae95037">&#9670;&nbsp;</a></span>operator ^()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator ^ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the cross product of this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a3d925a3d85c8a11e5e360dfb99d42b37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d925a3d85c8a11e5e360dfb99d42b37">&#9670;&nbsp;</a></span>operator ^=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator ^= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Replace this by the cross product between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a460f3a646a44e0dd129280eff215bef8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a460f3a646a44e0dd129280eff215bef8">&#9670;&nbsp;</a></span>operator+() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the addition of k into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a54d06f761a78055786b725b877af0afb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54d06f761a78055786b725b877af0afb">&#9670;&nbsp;</a></span>operator+() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the addition of u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="aa40fc443bf77598f83faac93ba11929f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa40fc443bf77598f83faac93ba11929f">&#9670;&nbsp;</a></span>operator+=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a scalar to all components </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the scalar to add </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a076439dc95b4f1180ff64e1564f05b40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a076439dc95b4f1180ff64e1564f05b40">&#9670;&nbsp;</a></span>operator+=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Add a vector into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to add into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ac882f95d2a010366bae0a15c85e57515"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac882f95d2a010366bae0a15c85e57515">&#9670;&nbsp;</a></span>operator/() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the division of this by k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a8e2e111c6a93d72a1e6e38afa7c19337"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e2e111c6a93d72a1e6e38afa7c19337">&#9670;&nbsp;</a></span>operator/() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt;std::common_type_t&lt;T, K&gt; &gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the vector resulting in the division of this by u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the division vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the computed vector </dd></dl>

</div>
</div>
<a id="a52865a646111eaf68e9771a9b84149ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52865a646111eaf68e9771a9b84149ce">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>k</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this by a factor k </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">k</td><td>the division factor </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a2e023261ec90957f811c1069439728cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e023261ec90957f811c1069439728cf">&#9670;&nbsp;</a></span>operator/=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Divide this by a vector u, component by component </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the division vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="ae4ec289b2d1189b313486a9f3c2a7957"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4ec289b2d1189b313486a9f3c2a7957">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="ae0de1f140819e7ba48190f21c8cf7d08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0de1f140819e7ba48190f21c8cf7d08">&#9670;&nbsp;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Inferior or Equal test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a03f9efec7ea3dda163209b2a7c7ddc9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03f9efec7ea3dda163209b2a7c7ddc9e">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; T &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a05921d8cf0d6ab79100e9ba7ca351feb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05921d8cf0d6ab79100e9ba7ca351feb">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a7bb077690c49adf58f54267f91543b7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bb077690c49adf58f54267f91543b7b">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Copy u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to copy into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="aff34345bd99500fb89a0a77e3f12b609"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff34345bd99500fb89a0a77e3f12b609">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Move u into this </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the object to move into this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a5e7d2794212483efaf5163f491711e4a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e7d2794212483efaf5163f491711e4a">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Equality test between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector to test with this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the test's result </dd></dl>

</div>
</div>
<a id="a54ed86b07ede49f2e46f17254c965d2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54ed86b07ede49f2e46f17254c965d2f">&#9670;&nbsp;</a></span>operator|()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator| </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the scalar product between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the scalar product </dd></dl>

</div>
</div>
<a id="ab3cf5aad969543b2881bdfc53715527c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3cf5aad969543b2881bdfc53715527c">&#9670;&nbsp;</a></span>operator|=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::common_type_t&lt;T, K&gt; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::operator|= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Compute the scalar product between this and u </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the scalar product </dd></dl>

</div>
</div>
<a id="abd05ef00181cf6c3df9f12b49c9eb62b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd05ef00181cf6c3df9f12b49c9eb62b">&#9670;&nbsp;</a></span>pow() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::pow </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Raise all components to the given power </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the power to which to raise this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="acdd389ba88eef7bd68798068cef11e69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdd389ba88eef7bd68798068cef11e69">&#9670;&nbsp;</a></span>pow() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&amp; <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::pow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">Vector4D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>p</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Raise all components to the given power vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">p</td><td>the set of power to which to raise this </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the reference of himself </dd></dl>

</div>
</div>
<a id="a7edc6bf8ca15f7c94f2c78b642a6d684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7edc6bf8ca15f7c94f2c78b642a6d684">&#9670;&nbsp;</a></span>setA()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setA </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>W setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a39a1604b0987d8415611103cc6b84490"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a1604b0987d8415611103cc6b84490">&#9670;&nbsp;</a></span>setB()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setB </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Z setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b</td><td>the new value for z </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a543e584b39dc45b87a1436b35abb0bf7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a543e584b39dc45b87a1436b35abb0bf7">&#9670;&nbsp;</a></span>setCoord() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N , class M &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setCoord </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">N&#160;</td>
          <td class="paramname"><em>nZ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">M&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for x, y, z and w </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>the new value for x </td></tr>
    <tr><td class="paramname">nY</td><td>the new value for y </td></tr>
    <tr><td class="paramname">nZ</td><td>the new value for z </td></tr>
    <tr><td class="paramname">nW</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a651e4b28db7197bcb24840702ddd5804"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a651e4b28db7197bcb24840702ddd5804">&#9670;&nbsp;</a></span>setCoord() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setCoord </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector2_d.php">Vector2D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nZ</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">N&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for x, y, z and w with a base 2D vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the base 2D vector for x and y values </td></tr>
    <tr><td class="paramname">nZ</td><td>the new value for z </td></tr>
    <tr><td class="paramname">nW</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9617a98b750feb2d8401c3f722d485df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9617a98b750feb2d8401c3f722d485df">&#9670;&nbsp;</a></span>setCoord() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setCoord </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>nW</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for x, y, z and w with a base 3D vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the base 3D vector for x, y and z values </td></tr>
    <tr><td class="paramname">nW</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aadd70b2171b76b2b238025de821ef439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadd70b2171b76b2b238025de821ef439">&#9670;&nbsp;</a></span>setG()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setG </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>g</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Y setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">g</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad0248769e7fb453ed853b3ba654659dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0248769e7fb453ed853b3ba654659dd">&#9670;&nbsp;</a></span>setR()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setR </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>r</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>X setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>the new value for x </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7c4ba628320136d79cf156a0408450f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c4ba628320136d79cf156a0408450f8">&#9670;&nbsp;</a></span>setRGBA() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L , class N , class M &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setRGBA </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>r</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">N&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">M&#160;</td>
          <td class="paramname"><em>a</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for x, y, z and w </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">r</td><td>the new value for x </td></tr>
    <tr><td class="paramname">g</td><td>the new value for y </td></tr>
    <tr><td class="paramname">b</td><td>the new value for z </td></tr>
    <tr><td class="paramname">a</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afea9356e86a055b22aa8c2ab21290bb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afea9356e86a055b22aa8c2ab21290bb2">&#9670;&nbsp;</a></span>setRGBA() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K , class L &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setRGBA </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D</a>&lt; K &gt; const &amp;&#160;</td>
          <td class="paramname"><em>u</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">L&#160;</td>
          <td class="paramname"><em>a</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the values for x, y, z and w with a base 3D vector </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">u</td><td>the base 3D vector for x, y and z values </td></tr>
    <tr><td class="paramname">a</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5ee882af7eeaef4ff3439fdab6614d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ee882af7eeaef4ff3439fdab6614d7a">&#9670;&nbsp;</a></span>setW()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setW </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nW</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>W setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nW</td><td>the new value for w </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a38abf4aeb4499f3f151c961b2ab09c39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38abf4aeb4499f3f151c961b2ab09c39">&#9670;&nbsp;</a></span>setX()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setX </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nX</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>X setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nX</td><td>the new value for x </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a08fdd67f8e0c93134373602a27f63fd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08fdd67f8e0c93134373602a27f63fd2">&#9670;&nbsp;</a></span>setY()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setY </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nY</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Y setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nY</td><td>the new value for y </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a558915236fe79877f742037847beeaa8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a558915236fe79877f742037847beeaa8">&#9670;&nbsp;</a></span>setZ()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
<div class="memtemplate">
template&lt;class K &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::setZ </td>
          <td>(</td>
          <td class="paramtype">K&#160;</td>
          <td class="paramname"><em>nZ</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Z setter </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nZ</td><td>the new value for z </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9a60b47199873f76c28f7e124585f944"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a60b47199873f76c28f7e124585f944">&#9670;&nbsp;</a></span>toString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">Utility::String <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::toString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Convert the vector into a string </p><dl class="section return"><dt>Returns</dt><dd>the converted vector </dd></dl>

</div>
</div>
<a id="a76d1abdab3ab29bed36bb42c211bc3be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d1abdab3ab29bed36bb42c211bc3be">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">const T* <a class="el" href="class_n_r_e_1_1_math_1_1_vector4_d.php">NRE::Math::Vector4D</a>&lt; T &gt;::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a pointer to the vector's data </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Matrix/4D/<a class="el" href="_n_r_e___matrix4x4_8hpp_source.php">NRE_Matrix4x4.hpp</a></li>
<li>C:/Users/abell/Documents/GitHub/NRE-Math/src/Math/Vector/4D/<a class="el" href="_n_r_e___vector4_d_8hpp_source.php">NRE_Vector4D.hpp</a></li>
</ul>
</div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
