<!-- HTML header for doxygen 1.8.8-->
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <!-- For Mobile Devices -->
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
        <meta name="generator" content="Doxygen 1.8.11"/>
        <script type="text/javascript" src="../../js/jquery-2.1.1.min.js"></script>
        <title>NRE-Math: /mnt/c/Users/abell/Documents/GitHub/NRE-Math/src/Math/Vector/3D/NRE_Vector3D.hpp Source File</title>
        <!--<link href="tabs.css" rel="stylesheet" type="text/css"/>-->
        <script type="text/javascript" src="dynsections.js"></script>
        <link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <link href='https://fonts.googleapis.com/css?family=Roboto+Slab' rel='stylesheet' type='text/css'>
        <?php
            include '../../php/navigation.php';
            if (!isset($_COOKIE["theme"]) || $_COOKIE["theme"] == "dark") {
                echo '<link href="../../css/dark/bootstrap.css" rel="stylesheet">';
            } else {
                echo '<link href="../../css/light/bootstrap.css" rel="stylesheet">';
            }
        ?>
        <script src="../../js/bootstrap.min.js"></script>
        <script type="text/javascript" src="doxy-boot.js"></script>
    </head>
    <body>
        <div class="container-fluid">
            <header class="page-header">
                <a href="../../../index.php">
                    <img src="../../img/Logo.png" class="logo img-responsive"/>
                </a>
            </header>
            <?php addNavigationBarInl(false); ?>
            <div id="top" class="row"><!-- do not remove this div, it is closed by doxygen! -->
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
      <li><a href="globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.php">src</a></li><li class="navelem"><a class="el" href="dir_3813464283bee2267f39dcf080a84d74.php">Math</a></li><li class="navelem"><a class="el" href="dir_4005e686f12f80d4c04432a698da12f8.php">Vector</a></li><li class="navelem"><a class="el" href="dir_3e033f12937dd268a3f1dbce87ebdfd5.php">3D</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NRE_Vector3D.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_n_r_e___vector3_d_8hpp.php">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">     #pragma once</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">     #include &lt;Utility/String/NRE_String.hpp&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">     #include &lt;Utility/Interfaces/Stringable/NRE_Stringable.hpp&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">     #include &quot;../../NRE_Math.hpp&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespace_n_r_e.php">NRE</a> {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keyword">namespace </span><a class="code" href="namespace_math.php">Math</a> {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector2D;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span>&gt; <span class="keyword">class </span>Vector4D;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keyword">class </span>Vector3D : <span class="keyword">public</span> Utility::Stringable&lt;Vector3D&lt;T&gt;&gt; {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keyword">private</span> :   <span class="comment">//Fields</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    T x;    </div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    T y;    </div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    T z;    </div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keyword">public</span> :    <span class="comment">// Methods</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="comment">//## Constructor ##//</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N&gt;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(K nX, L nY, N nZ);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(K <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#acd11b49acd0498dc3a5b0d395933bf63">value</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(std::initializer_list&lt;T&gt; list);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <span class="comment">//## Copy-Constructor ##//</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a> <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="comment">//## Move-Constructor ##//</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a> &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="comment">//## Convertor ##//</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(Vector4D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L&gt;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u, L nZ);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="comment">//## Deconstructor ##//</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aae907186694f911c888e2c5d20ef51c5">~Vector3D</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    <span class="comment">//## Getter ##//</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span>                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa208efa6ace10aa41c7e05165ecef8e7">getX</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0653a5cdbbde436f51bf293f63965d2a">getY</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a1d3d9ffe38e46ad28d3bcb5a9f6f8e18">getZ</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ab4f2744382427f483dc9716cfa12bbfc">getR</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#afb49b844ee4c24241f8c6972c3fec140">getG</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aceec4723c7610a82a27959c8f09b73bd">getB</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <span class="comment">//## Setter ##//</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#af950b89d24db45f617691300fbb777dd">setX</a>(K nX);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa0e73f39fe19ae05ed81235839a6468a">setY</a>(K nY);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a629a32e75365614df91197623e68fab6">setZ</a>(K nZ);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a297daa2866a290774e6e86c212d34434">setR</a>(K r);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad7794fcc6f53166fc34c0007c3b624e8">setG</a>(K g);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a3c1982e7df22f67f2521ac9e7a9fdbe2">setB</a>(K b);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N&gt;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ae6aecc3881d571ec59d1674258681434">setCoord</a>(K nX, L nY, N nZ);</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L&gt;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ae6aecc3881d571ec59d1674258681434">setCoord</a>(Vector2D&lt;K&gt; <span class="keyword">const</span>&amp; u, L nZ);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K, <span class="keyword">class</span> L, <span class="keyword">class</span> N&gt;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a453742f910984b8346e5e76dc9c05abd">setRGB</a>(K r, L g, N b);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    <span class="comment">//## Methods ##//</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"></span>                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a911ad22261fdd1446695c2e5ea3002c4">norm</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        T <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#af142e5e7b4fa1eb5f130b17e4168e44d">normSquared</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        <span class="keywordtype">long</span> <span class="keywordtype">double</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a52ce9e19c29c901cdeb1979fad1782c3">distance</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a2de10c6e87df71b28d6b3e4d12094f47">distanceSquared</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; v) <span class="keyword">const</span>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ac9fe609c2abdac54ac5f0e31d6fd6f92">normalize</a>();</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        <span class="keywordtype">void</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a9d8d7c69786525425e0897a4027b1f3d">limit</a>(K max);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a07057f79aa3ce16eaa6cf3449e056307">pow</a>(K p);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a07057f79aa3ce16eaa6cf3449e056307">pow</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        <span class="keyword">const</span> T* <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#acd11b49acd0498dc3a5b0d395933bf63">value</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <span class="comment">//## Access Operator ##//</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment"></span>                        T&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#afb3215527155b8ec7bd5431d6f92c9f0">operator []</a>(std::size_t index);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                         T <span class="keyword">const</span>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#afb3215527155b8ec7bd5431d6f92c9f0">operator []</a>(std::size_t index) <span class="keyword">const</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="comment">//## Assignment Operator ##//</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment"></span>                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a66c47e8adcbce9b02edd15b236e6fa1e">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a> <span class="keyword">const</span>&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a66c47e8adcbce9b02edd15b236e6fa1e">operator =</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a> &amp;&amp; u) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a66c47e8adcbce9b02edd15b236e6fa1e">operator =</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a66c47e8adcbce9b02edd15b236e6fa1e">operator =</a>(Vector3D&lt;K&gt; &amp;&amp; u);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    <span class="comment">//## Shortcut Operator ##//</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0afa8627aec15b8e5b033844cdd1f8f7">operator +=</a>(K k);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0afa8627aec15b8e5b033844cdd1f8f7">operator +=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a86bc29132c39b1d7e04af2c6ba8be680">operator -=</a>(K k);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a86bc29132c39b1d7e04af2c6ba8be680">operator -=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ab288d7b45aa1c85099efb3c992524e09">operator *=</a>(K k);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ab288d7b45aa1c85099efb3c992524e09">operator *=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad61078296a8d9c9fd6030dd8f33c3a70">operator /=</a>(K k);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad61078296a8d9c9fd6030dd8f33c3a70">operator /=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a5ca367ef3264101ea4db45fe054edbcf">operator |=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a>&amp; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a7d129508f8b415ff205cea8bdef52747">operator ^=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                    <span class="comment">//## Arithmetic Operator ##//</span></div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a872468cf6ffe79549bd533eb3cddedc4">operator +</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a872468cf6ffe79549bd533eb3cddedc4">operator +</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad876c3f4e754d46d5491b1c89e1d24a1">operator -</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad876c3f4e754d46d5491b1c89e1d24a1">operator -</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">Vector3D</a> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad876c3f4e754d46d5491b1c89e1d24a1">operator -</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a657d8413104e25ec03b06ac69327a746">operator *</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a657d8413104e25ec03b06ac69327a746">operator *</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a159df2e3acf4f150df5195fa113332df">operator /</a>(K k) <span class="keyword">const</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a159df2e3acf4f150df5195fa113332df">operator /</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        std::common_type_t&lt;T, K&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a4fc05463ee9a7be03f76d6fc8e3fee86">operator |</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                        Vector3D&lt;std::common_type_t&lt;T, K&gt;&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a7ec577d1d399f3246dbc158f090b72d8">operator ^</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                    <span class="comment">//## Comparison Operator ##//</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"></span>                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa018c02726a546b8c22c0a1846343dfc">operator ==</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad6c75e15563e5cd992b3a9406d4fa6b5">operator !=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                        <span class="keywordtype">bool</span> operator &lt;(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a74aab1ffb524b25fd50d4453a980fd01">operator &gt;</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                        <span class="keywordtype">bool</span> operator &lt;=(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                        <span class="keyword">template</span> &lt;<span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                        <span class="keywordtype">bool</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a436716968f11ef7b01ae1c0bd366288d">operator &gt;=</a>(Vector3D&lt;K&gt; <span class="keyword">const</span>&amp; u) <span class="keyword">const</span>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                    <span class="comment">//## Stream Operator ##//</span></div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment"></span>                        Utility::String <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a55c5e2d792fa7364ab98dfb6f7d7ce11">toString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            };</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    </div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            template &lt;class T, class K, typename = std::enable_if_t&lt;std::is_arithmetic&lt;K&gt;::value&gt;&gt;</div><div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="_n_r_e___vector3_d_8hpp.php#abeaf53655fe4c94512924814d00573a9">  503</a></span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a657d8413104e25ec03b06ac69327a746">operator *</a>(K k, <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u) {</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="keywordflow">return</span> u * k;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            }</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#ac9fe609c2abdac54ac5f0e31d6fd6f92">normalize</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u);</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a07057f79aa3ce16eaa6cf3449e056307">pow</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, K k);</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a07057f79aa3ce16eaa6cf3449e056307">pow</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; p);</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;std::common_type_t&lt;T, K&gt;</a>&gt; <a class="code" href="_n_r_e___vector2_d_8hpp.php#aa6eed141d206af676ec4fd3b20b6ac50">reflect</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a> <span class="keyword">const</span>&amp; u, <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;K&gt;</a> <span class="keyword">const</span>&amp; n);</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Point3D</a> = <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">Vector3D&lt;T&gt;</a>;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        }</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    }</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keyword">namespace </span><a class="code" href="namespacestd.php">std</a> {</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keyword">template</span> &lt;<span class="keyword">class</span> T, <span class="keyword">class</span> K&gt;</div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="structstd_1_1common__type_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01_t_01_4_00_01_n_r_e_1_1_math_1_1_vector3_d_3_01_k_01_4_01_4.php">  549</a></span>&#160;        <span class="keyword">struct </span>common_type&lt;<a class="code" href="namespace_n_r_e.php">NRE</a>::Math::Vector3D&lt;T&gt;, <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">NRE::Math::Vector3D</a>&lt;K&gt;&gt; {</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;            <span class="keyword">using</span> <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">type</a> = <a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">NRE::Math::Vector3D&lt;common_type_t&lt;T, K&gt;</a>&gt;;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        };</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="classstd_1_1hash_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01float_01_4_01_4.php">  557</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classhash.php">hash</a>&lt;<a class="code" href="namespace_n_r_e.php">NRE</a>::Math::Vector3D&lt;float&gt;&gt; {</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            <span class="keyword">public</span>:</div><div class="line"><a name="l00564"></a><span class="lineno"><a class="line" href="classstd_1_1hash_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01float_01_4_01_4.php#a215f5b8549164ea981879fd1b0c0e2e3">  564</a></span>&#160;                <span class="keywordtype">size_t</span> <a class="code" href="classstd_1_1hash_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01float_01_4_01_4.php#a215f5b8549164ea981879fd1b0c0e2e3">operator()</a>(<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php">NRE::Math::Vector3D&lt;float&gt;</a> <span class="keyword">const</span>&amp; p)<span class="keyword"> const </span>{</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> keep     = 21;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                    <span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> hashSize = <span class="keyword">sizeof</span>(size_t) * 8;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    <span class="keywordtype">float</span> x = p.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa208efa6ace10aa41c7e05165ecef8e7">getX</a>();</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                    <span class="keywordtype">float</span> y = p.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0653a5cdbbde436f51bf293f63965d2a">getY</a>();</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                    <span class="keywordtype">float</span> z = p.<a class="code" href="class_n_r_e_1_1_math_1_1_vector3_d.php#a1d3d9ffe38e46ad28d3bcb5a9f6f8e18">getZ</a>();</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                    <span class="keywordtype">size_t</span> iX, iY, iZ;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                    memcpy(&amp;iX, &amp;x, <span class="keyword">sizeof</span>(x));</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                    iX &lt;&lt;= hashSize - keep;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                    iX &amp;= 0xFFFFF80000000000;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                    memcpy(&amp;iY, &amp;y, <span class="keyword">sizeof</span>(y));</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                    iY &lt;&lt;= hashSize - (keep * 2);</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                    iY &amp;= 0x000007FFFFC00000;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                    memcpy(&amp;iZ, &amp;z, <span class="keyword">sizeof</span>(z));</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                    iZ &lt;&lt;= hashSize - (keep * 3);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    iZ &amp;= 0x00000000003FFFFE;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                    <span class="keywordflow">return</span> iX + iY + iZ;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                }</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        };</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    }</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="preprocessor">    #include &quot;NRE_Vector3D.tpp&quot;</span></div><div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ad7794fcc6f53166fc34c0007c3b624e8"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad7794fcc6f53166fc34c0007c3b624e8">NRE::Math::Vector3D::setG</a></div><div class="ttdeci">void setG(K g)</div></div>
<div class="ttc" id="_n_r_e___vector2_d_8hpp_php_aa6eed141d206af676ec4fd3b20b6ac50"><div class="ttname"><a href="_n_r_e___vector2_d_8hpp.php#aa6eed141d206af676ec4fd3b20b6ac50">NRE::Math::reflect</a></div><div class="ttdeci">Vector2D&lt; std::common_type_t&lt; T, K &gt; &gt; reflect(Vector2D&lt; T &gt; const &amp;u, Vector2D&lt; K &gt; const &amp;n)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_afb49b844ee4c24241f8c6972c3fec140"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#afb49b844ee4c24241f8c6972c3fec140">NRE::Math::Vector3D::getG</a></div><div class="ttdeci">T getG() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a453742f910984b8346e5e76dc9c05abd"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a453742f910984b8346e5e76dc9c05abd">NRE::Math::Vector3D::setRGB</a></div><div class="ttdeci">void setRGB(K r, L g, N b)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a872468cf6ffe79549bd533eb3cddedc4"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a872468cf6ffe79549bd533eb3cddedc4">NRE::Math::Vector3D::operator+</a></div><div class="ttdeci">Vector3D&lt; std::common_type_t&lt; T, K &gt; &gt; operator+(K k) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aa0e73f39fe19ae05ed81235839a6468a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa0e73f39fe19ae05ed81235839a6468a">NRE::Math::Vector3D::setY</a></div><div class="ttdeci">void setY(K nY)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a9d8d7c69786525425e0897a4027b1f3d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a9d8d7c69786525425e0897a4027b1f3d">NRE::Math::Vector3D::limit</a></div><div class="ttdeci">void limit(K max)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_af950b89d24db45f617691300fbb777dd"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#af950b89d24db45f617691300fbb777dd">NRE::Math::Vector3D::setX</a></div><div class="ttdeci">void setX(K nX)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ad6c75e15563e5cd992b3a9406d4fa6b5"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad6c75e15563e5cd992b3a9406d4fa6b5">NRE::Math::Vector3D::operator!=</a></div><div class="ttdeci">bool operator!=(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_afb3215527155b8ec7bd5431d6f92c9f0"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#afb3215527155b8ec7bd5431d6f92c9f0">NRE::Math::Vector3D::operator[]</a></div><div class="ttdeci">T &amp; operator[](std::size_t index)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a0afa8627aec15b8e5b033844cdd1f8f7"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0afa8627aec15b8e5b033844cdd1f8f7">NRE::Math::Vector3D::operator+=</a></div><div class="ttdeci">Vector3D &amp; operator+=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a3c1982e7df22f67f2521ac9e7a9fdbe2"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a3c1982e7df22f67f2521ac9e7a9fdbe2">NRE::Math::Vector3D::setB</a></div><div class="ttdeci">void setB(K b)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a5ca367ef3264101ea4db45fe054edbcf"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a5ca367ef3264101ea4db45fe054edbcf">NRE::Math::Vector3D::operator|=</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; operator|=(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a629a32e75365614df91197623e68fab6"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a629a32e75365614df91197623e68fab6">NRE::Math::Vector3D::setZ</a></div><div class="ttdeci">void setZ(K nZ)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a7d129508f8b415ff205cea8bdef52747"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a7d129508f8b415ff205cea8bdef52747">NRE::Math::Vector3D::operator^=</a></div><div class="ttdeci">Vector3D &amp; operator^=(Vector3D&lt; K &gt; const &amp;u)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a2de10c6e87df71b28d6b3e4d12094f47"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a2de10c6e87df71b28d6b3e4d12094f47">NRE::Math::Vector3D::distanceSquared</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; distanceSquared(Vector3D&lt; K &gt; const &amp;v) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_af142e5e7b4fa1eb5f130b17e4168e44d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#af142e5e7b4fa1eb5f130b17e4168e44d">NRE::Math::Vector3D::normSquared</a></div><div class="ttdeci">T normSquared() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ab288d7b45aa1c85099efb3c992524e09"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ab288d7b45aa1c85099efb3c992524e09">NRE::Math::Vector3D::operator*=</a></div><div class="ttdeci">Vector3D &amp; operator*=(K k)</div></div>
<div class="ttc" id="classhash_php"><div class="ttname"><a href="classhash.php">hash</a></div><div class="ttdoc">Manage hashing for specialized version. </div></div>
<div class="ttc" id="namespace_math_php"><div class="ttname"><a href="namespace_math.php">Math</a></div><div class="ttdoc">Math&amp;#39;s API. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ab4f2744382427f483dc9716cfa12bbfc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ab4f2744382427f483dc9716cfa12bbfc">NRE::Math::Vector3D::getR</a></div><div class="ttdeci">T getR() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a159df2e3acf4f150df5195fa113332df"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a159df2e3acf4f150df5195fa113332df">NRE::Math::Vector3D::operator/</a></div><div class="ttdeci">Vector3D&lt; std::common_type_t&lt; T, K &gt; &gt; operator/(K k) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ae6aecc3881d571ec59d1674258681434"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ae6aecc3881d571ec59d1674258681434">NRE::Math::Vector3D::setCoord</a></div><div class="ttdeci">void setCoord(K nX, L nY, N nZ)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a657d8413104e25ec03b06ac69327a746"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a657d8413104e25ec03b06ac69327a746">NRE::Math::Vector3D::operator*</a></div><div class="ttdeci">Vector3D&lt; std::common_type_t&lt; T, K &gt; &gt; operator*(K k) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ad876c3f4e754d46d5491b1c89e1d24a1"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad876c3f4e754d46d5491b1c89e1d24a1">NRE::Math::Vector3D::operator-</a></div><div class="ttdeci">Vector3D operator-() const </div></div>
<div class="ttc" id="namespacestd_php"><div class="ttname"><a href="namespacestd.php">std</a></div><div class="ttdoc">The stl standard namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a7ec577d1d399f3246dbc158f090b72d8"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a7ec577d1d399f3246dbc158f090b72d8">NRE::Math::Vector3D::operator^</a></div><div class="ttdeci">Vector3D&lt; std::common_type_t&lt; T, K &gt; &gt; operator^(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aceec4723c7610a82a27959c8f09b73bd"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aceec4723c7610a82a27959c8f09b73bd">NRE::Math::Vector3D::getB</a></div><div class="ttdeci">T getB() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a336259bc9566a6a1b464be1ce7b6e6a3"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a336259bc9566a6a1b464be1ce7b6e6a3">NRE::Math::Vector3D::Vector3D</a></div><div class="ttdeci">Vector3D()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a55c5e2d792fa7364ab98dfb6f7d7ce11"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a55c5e2d792fa7364ab98dfb6f7d7ce11">NRE::Math::Vector3D::toString</a></div><div class="ttdeci">Utility::String toString() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php">NRE::Math::Vector3D</a></div><div class="ttdoc">A cartesian 3D vector, 2D homogeneous. </div><div class="ttdef"><b>Definition:</b> NRE_Matrix3x3.hpp:33</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aae907186694f911c888e2c5d20ef51c5"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aae907186694f911c888e2c5d20ef51c5">NRE::Math::Vector3D::~Vector3D</a></div><div class="ttdeci">~Vector3D()=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a86bc29132c39b1d7e04af2c6ba8be680"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a86bc29132c39b1d7e04af2c6ba8be680">NRE::Math::Vector3D::operator-=</a></div><div class="ttdeci">Vector3D &amp; operator-=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aa018c02726a546b8c22c0a1846343dfc"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa018c02726a546b8c22c0a1846343dfc">NRE::Math::Vector3D::operator==</a></div><div class="ttdeci">bool operator==(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a436716968f11ef7b01ae1c0bd366288d"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a436716968f11ef7b01ae1c0bd366288d">NRE::Math::Vector3D::operator&gt;=</a></div><div class="ttdeci">bool operator&gt;=(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a0653a5cdbbde436f51bf293f63965d2a"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a0653a5cdbbde436f51bf293f63965d2a">NRE::Math::Vector3D::getY</a></div><div class="ttdeci">T getY() const </div></div>
<div class="ttc" id="classstd_1_1hash_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01float_01_4_01_4_php_a215f5b8549164ea981879fd1b0c0e2e3"><div class="ttname"><a href="classstd_1_1hash_3_01_n_r_e_1_1_math_1_1_vector3_d_3_01float_01_4_01_4.php#a215f5b8549164ea981879fd1b0c0e2e3">std::hash&lt; NRE::Math::Vector3D&lt; float &gt; &gt;::operator()</a></div><div class="ttdeci">size_t operator()(NRE::Math::Vector3D&lt; float &gt; const &amp;p) const </div><div class="ttdef"><b>Definition:</b> NRE_Vector3D.hpp:564</div></div>
<div class="ttc" id="namespace_n_r_e_php"><div class="ttname"><a href="namespace_n_r_e.php">NRE</a></div><div class="ttdoc">The NearlyRealEngine&amp;#39;s global namespace. </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a911ad22261fdd1446695c2e5ea3002c4"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a911ad22261fdd1446695c2e5ea3002c4">NRE::Math::Vector3D::norm</a></div><div class="ttdeci">long double norm() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a4fc05463ee9a7be03f76d6fc8e3fee86"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a4fc05463ee9a7be03f76d6fc8e3fee86">NRE::Math::Vector3D::operator|</a></div><div class="ttdeci">std::common_type_t&lt; T, K &gt; operator|(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ac9fe609c2abdac54ac5f0e31d6fd6f92"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ac9fe609c2abdac54ac5f0e31d6fd6f92">NRE::Math::Vector3D::normalize</a></div><div class="ttdeci">Vector3D &amp; normalize()</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a66c47e8adcbce9b02edd15b236e6fa1e"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a66c47e8adcbce9b02edd15b236e6fa1e">NRE::Math::Vector3D::operator=</a></div><div class="ttdeci">Vector3D &amp; operator=(Vector3D const &amp;u)=default</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a52ce9e19c29c901cdeb1979fad1782c3"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a52ce9e19c29c901cdeb1979fad1782c3">NRE::Math::Vector3D::distance</a></div><div class="ttdeci">long double distance(Vector3D&lt; K &gt; const &amp;v) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a1d3d9ffe38e46ad28d3bcb5a9f6f8e18"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a1d3d9ffe38e46ad28d3bcb5a9f6f8e18">NRE::Math::Vector3D::getZ</a></div><div class="ttdeci">T getZ() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a74aab1ffb524b25fd50d4453a980fd01"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a74aab1ffb524b25fd50d4453a980fd01">NRE::Math::Vector3D::operator&gt;</a></div><div class="ttdeci">bool operator&gt;(Vector3D&lt; K &gt; const &amp;u) const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_aa208efa6ace10aa41c7e05165ecef8e7"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#aa208efa6ace10aa41c7e05165ecef8e7">NRE::Math::Vector3D::getX</a></div><div class="ttdeci">T getX() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a297daa2866a290774e6e86c212d34434"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a297daa2866a290774e6e86c212d34434">NRE::Math::Vector3D::setR</a></div><div class="ttdeci">void setR(K r)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_ad61078296a8d9c9fd6030dd8f33c3a70"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#ad61078296a8d9c9fd6030dd8f33c3a70">NRE::Math::Vector3D::operator/=</a></div><div class="ttdeci">Vector3D &amp; operator/=(K k)</div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_acd11b49acd0498dc3a5b0d395933bf63"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#acd11b49acd0498dc3a5b0d395933bf63">NRE::Math::Vector3D::value</a></div><div class="ttdeci">const T * value() const </div></div>
<div class="ttc" id="class_n_r_e_1_1_math_1_1_vector3_d_php_a07057f79aa3ce16eaa6cf3449e056307"><div class="ttname"><a href="class_n_r_e_1_1_math_1_1_vector3_d.php#a07057f79aa3ce16eaa6cf3449e056307">NRE::Math::Vector3D::pow</a></div><div class="ttdeci">Vector3D &amp; pow(K p)</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- HTML footer for doxygen 1.8.8-->
<!-- start footer part -->
</div>
</div>
</div>
</div>
</body>
</html>
